ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           ARM
  Version:                           0x1
  Entry point address:               0x4a339
  Start of program headers:          52 (bytes into file)
  Start of section headers:          1285396 (bytes into file)
  Flags:                             0x5000200, Version5 EABI, soft-float ABI
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         6
  Size of section headers:           40 (bytes)
  Number of section headers:         37
  Section header string table index: 36

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] rom_start         PROGBITS        00048000 000100 00047c 00 WAX  0   0  4
  [ 2] text              PROGBITS        00048480 000580 0071ac 00  AX  0   0  8
  [ 3] .ARM.exidx        ARM_EXIDX       0004f62c 00772c 000008 00  AL  2   0  4
  [ 4] initlevel         PROGBITS        0004f634 007734 000068 00   A  0   0  4
  [ 5] device_area       PROGBITS        0004f69c 00779c 0000a0 00   A  0   0  4
  [ 6] sw_isr_table      PROGBITS        0004f73c 00783c 000878 00  WA  0   0  4
  [ 7] gpio_driver_[...] PROGBITS        0004ffb4 0080b4 000024 00   A  0   0  4
  [ 8] clock_contro[...] PROGBITS        0004ffd8 0080d8 00001c 00   A  0   0  4
  [ 9] uart_driver_[...] PROGBITS        0004fff4 0080f4 00000c 00   A  0   0  4
  [10] log_const_area    PROGBITS        00050000 008100 000050 00   A  0   0  4
  [11] log_backend_area  PROGBITS        00050050 008150 000010 00   A  0   0  4
  [12] tbss              NOBITS          00050060 008160 000004 00 WAT  0   0  4
  [13] rodata            PROGBITS        00050060 008160 000d48 00   A  0   0 16
  [14] .ramfunc          PROGBITS        20013000 008fec 000000 00   W  0   0  1
  [15] datas             PROGBITS        20013000 008ea8 0000d4 00  WA  0   0  8
  [16] device_states     PROGBITS        200130d4 008f7c 00000c 00  WA  0   0  1
  [17] log_mpsc_pbu[...] PROGBITS        200130e0 008f88 000038 00  WA  0   0  4
  [18] log_msg_ptr_area  PROGBITS        20013118 008fc0 000004 00  WA  0   0  4
  [19] k_mutex_area      PROGBITS        2001311c 008fc4 000014 00  WA  0   0  4
  [20] k_sem_area        PROGBITS        20013130 008fd8 000010 00  WA  0   0  4
  [21] .comment          PROGBITS        00000000 008fec 000020 01  MS  0   0  1
  [22] .debug_aranges    PROGBITS        00000000 009010 001b08 00      0   0  8
  [23] .debug_info       PROGBITS        00000000 00ab18 0975c4 00      0   0  1
  [24] .debug_abbrev     PROGBITS        00000000 0a20dc 00f5d5 00      0   0  1
  [25] .debug_line       PROGBITS        00000000 0b16b1 02bede 00      0   0  1
  [26] .debug_frame      PROGBITS        00000000 0dd590 004774 00      0   0  4
  [27] .debug_str        PROGBITS        00000000 0e1d04 00fc0c 01  MS  0   0  1
  [28] .debug_loc        PROGBITS        00000000 0f1910 02daab 00      0   0  1
  [29] .debug_ranges     PROGBITS        00000000 11f3c0 0076e0 00      0   0  8
  [30] .ARM.attributes   ARM_ATTRIBUTES  00000000 126aa0 000038 00      0   0  1
  [31] .last_section     PROGBITS        00050ee8 008fe8 000004 00  WA  0   0  4
  [32] bss               NOBITS          20013140 008ff0 00095c 00  WA  0   0  8
  [33] noinit            NOBITS          20013aa0 008ff0 001040 00  WA  0   0  8
  [34] .symtab           SYMTAB          00000000 126ad8 009710 10     35 1115  4
  [35] .strtab           STRTAB          00000000 1301e8 009971 00      0   0  1
  [36] .shstrtab         STRTAB          00000000 139b59 0001b9 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), y (purecode), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  EXIDX          0x00772c 0x0004f62c 0x0004f62c 0x00008 0x00008 R   0x4
  LOAD           0x000100 0x00048000 0x00048000 0x08da8 0x08da8 RWE 0x10
  LOAD           0x008ea8 0x20013000 0x00050da8 0x00140 0x00140 RW  0x8
  LOAD           0x008fe8 0x00050ee8 0x00050ee8 0x00004 0x00004 RW  0x4
  LOAD           0x000000 0x20013140 0x20013140 0x00000 0x019a0 RW  0x8
  TLS            0x008160 0x00050060 0x00050060 0x00000 0x00004 R   0x4

 Section to Segment mapping:
  Segment Sections...
   00     .ARM.exidx 
   01     rom_start text .ARM.exidx initlevel device_area sw_isr_table gpio_driver_api_area clock_control_driver_api_area uart_driver_api_area log_const_area log_backend_area rodata 
   02     datas device_states log_mpsc_pbuf_area log_msg_ptr_area k_mutex_area k_sem_area 
   03     .last_section 
   04     bss noinit 
   05     tbss 
