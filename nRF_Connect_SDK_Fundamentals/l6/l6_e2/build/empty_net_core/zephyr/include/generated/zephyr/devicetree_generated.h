/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /Users/simonklovning/Documents/GitHub/Nordic_DevAcademy_Courses/nRF_Connect_SDK_Fundamentals/l6/l6_e2/build/empty_net_core/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /opt/nordic/ncs/v3.1.0/nrf/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /entropy_bt_hci
 *   5   /soc
 *   6   /soc/interrupt-controller@e000e100
 *   7   /soc/gpiote@4100a000
 *   8   /soc/gpio@418c0500
 *   9   /soc/gpio@418c0800
 *   10  /pin-controller
 *   11  /pin-controller/spi0_default
 *   12  /pin-controller/spi0_sleep
 *   13  /soc/spi@41013000
 *   14  /soc/spi@41013000/nrf21540_fem_spi@0
 *   15  /fem
 *   16  /soc/timer@41018000
 *   17  /sw-pwm
 *   18  /buttons
 *   19  /buttons/button_0
 *   20  /buttons/button_1
 *   21  /cpus
 *   22  /cpus/cpu@1
 *   23  /cpus/cpu@1/mpu@e000ed90
 *   24  /ipc
 *   25  /reserved-memory
 *   26  /reserved-memory/memory@20070000
 *   27  /soc/mbox@41012000
 *   28  /ipc/ipc0
 *   29  /leds
 *   30  /leds/led_1
 *   31  /leds/led_2
 *   32  /leds/led_3
 *   33  /pin-controller/spi0_default/group1
 *   34  /pin-controller/spi0_sleep/group1
 *   35  /pin-controller/uart0_default
 *   36  /pin-controller/uart0_default/group1
 *   37  /pin-controller/uart0_sleep
 *   38  /pin-controller/uart0_sleep/group1
 *   39  /soc/acl@41080000
 *   40  /soc/ccm@4100e000
 *   41  /soc/clock@41005000
 *   42  /soc/dppic@4100f000
 *   43  /soc/ecb@4100d000
 *   44  /soc/egu@41014000
 *   45  /soc/ficr@1ff0000
 *   46  /soc/i2c@41013000
 *   47  /soc/memory@20000000
 *   48  /soc/memory@21000000
 *   49  /soc/random@41009000
 *   50  /soc/rtc@41011000
 *   51  /soc/rtc@41016000
 *   52  /soc/swi@4101a000
 *   53  /soc/swi@4101b000
 *   54  /soc/swi@4101c000
 *   55  /soc/swi@4101d000
 *   56  /soc/temp@41010000
 *   57  /soc/timer@4100c000
 *   58  /soc/timer@41019000
 *   59  /soc/timer@e000e010
 *   60  /soc/uart@41013000
 *   61  /soc/uicr@1ff8000
 *   62  /soc/vmc@41081000
 *   63  /soc/watchdog@4100b000
 *   64  /soc/flash-controller@41080000
 *   65  /soc/flash-controller@41080000/flash@1000000
 *   66  /soc/flash-controller@41080000/flash@1000000/partitions
 *   67  /soc/flash-controller@41080000/flash@1000000/partitions/partition@0
 *   68  /soc/flash-controller@41080000/flash@1000000/partitions/partition@c000
 *   69  /soc/flash-controller@41080000/flash@1000000/partitions/partition@23000
 *   70  /soc/flash-controller@41080000/flash@1000000/partitions/partition@3a000
 *   71  /soc/power@41005000
 *   72  /soc/power@41005000/gpregret1@4100551c
 *   73  /soc/power@41005000/gpregret2@41005520
 *   74  /soc/radio@41008000
 *   75  /soc/radio@41008000/bt_hci_controller
 *   76  /soc/radio@41008000/bt_hci_sdc
 *   77  /soc/radio@41008000/ieee802154
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 13
#define DT_N_CHILD_NUM_STATUS_OKAY 12
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_ipc) fn(DT_N_S_buttons) fn(DT_N_S_leds) fn(DT_N_S_fem) fn(DT_N_S_connector) fn(DT_N_S_reserved_memory)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ipc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_fem) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_ipc, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_fem, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_sw_pwm, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ipc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_fem, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_ipc) fn(DT_N_S_buttons) fn(DT_N_S_leds) fn(DT_N_S_fem) fn(DT_N_S_connector) fn(DT_N_S_reserved_memory)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ipc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_fem) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_ipc, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_fem, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_ipc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_fem, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_reserved_memory, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /entropy_bt_hci */ \
	5, /* /soc */ \
	10, /* /pin-controller */ \
	15, /* /fem */ \
	17, /* /sw-pwm */ \
	18, /* /buttons */ \
	21, /* /cpus */ \
	24, /* /ipc */ \
	25, /* /reserved-memory */ \
	29, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nordic_thingy53_nrf5340_cpunet DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_nordic_thingy53_nrf5340_cpunet 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "thingy53-nrf5340-cpunet"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nordic,thingy53-nrf5340-cpunet"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "nordic,thingy53-nrf5340-cpunet"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED nordic,thingy53-nrf5340-cpunet
#define DT_N_P_compatible_IDX_0_STRING_TOKEN nordic_thingy53_nrf5340_cpunet
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_THINGY53_NRF5340_CPUNET
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = nordic-thingy53-edge-connector):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic-thingy53-edge-connector.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"
#define DT_N_S_connector_FULL_NAME_UNQUOTED connector
#define DT_N_S_connector_FULL_NAME_TOKEN connector
#define DT_N_S_connector_FULL_NAME_UPPER_TOKEN CONNECTOR

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_connector_NODELABEL_NUM 1
#define DT_N_S_connector_FOREACH_NODELABEL(fn) fn(edge_connector)
#define DT_N_S_connector_FOREACH_NODELABEL_VARGS(fn, ...) fn(edge_connector, __VA_ARGS__)
#define DT_N_S_connector_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_CHILD_NUM 0
#define DT_N_S_connector_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_connector_HASH 1hNYiTso4N65bku_L_0pzRcHL_5NCz8DqiXd1i5KK7Q

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_nordic_thingy53_edge_connector DT_N_S_connector
#define DT_N_NODELABEL_edge_connector              DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_IRQ_LEVEL 0
#define DT_N_S_connector_COMPAT_MATCHES_nordic_thingy53_edge_connector 1
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"nordic-thingy53-edge-connector"}
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_IDX_0 "nordic-thingy53-edge-connector"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED nordic-thingy53-edge-connector
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN nordic_thingy53_edge_connector
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_THINGY53_EDGE_CONNECTOR
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_zephyr_deferred_init 0
#define DT_N_S_connector_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /entropy_bt_hci
 *
 * Node identifier: DT_N_S_entropy_bt_hci
 *
 * Binding (compatible = zephyr,bt-hci-entropy):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/zephyr,bt-hci-entropy.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_entropy_bt_hci_PATH "/entropy_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_entropy_bt_hci_FULL_NAME "entropy_bt_hci"
#define DT_N_S_entropy_bt_hci_FULL_NAME_UNQUOTED entropy_bt_hci
#define DT_N_S_entropy_bt_hci_FULL_NAME_TOKEN entropy_bt_hci
#define DT_N_S_entropy_bt_hci_FULL_NAME_UPPER_TOKEN ENTROPY_BT_HCI

/* Node parent (/) identifier: */
#define DT_N_S_entropy_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_entropy_bt_hci_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_entropy_bt_hci_NODELABEL_NUM 1
#define DT_N_S_entropy_bt_hci_FOREACH_NODELABEL(fn) fn(rng_hci)
#define DT_N_S_entropy_bt_hci_FOREACH_NODELABEL_VARGS(fn, ...) fn(rng_hci, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_entropy_bt_hci_CHILD_NUM 0
#define DT_N_S_entropy_bt_hci_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_entropy_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_entropy_bt_hci_HASH SgcLB264LeTM7CzHuqx7oNBkdCC244OwlY5UEgw5yZk

/* Node's dependency ordinal: */
#define DT_N_S_entropy_bt_hci_ORD 4
#define DT_N_S_entropy_bt_hci_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_entropy_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_entropy_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_entropy_bt_hci_EXISTS 1
#define DT_N_INST_0_zephyr_bt_hci_entropy DT_N_S_entropy_bt_hci
#define DT_N_NODELABEL_rng_hci            DT_N_S_entropy_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_entropy_bt_hci_REG_NUM 0
#define DT_N_S_entropy_bt_hci_RANGES_NUM 0
#define DT_N_S_entropy_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_entropy_bt_hci_IRQ_NUM 0
#define DT_N_S_entropy_bt_hci_IRQ_LEVEL 0
#define DT_N_S_entropy_bt_hci_COMPAT_MATCHES_zephyr_bt_hci_entropy 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_COMPAT_MODEL_IDX_0 "bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_entropy_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_entropy_bt_hci_P_status "okay"
#define DT_N_S_entropy_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_entropy_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_entropy_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_entropy_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_entropy_bt_hci_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, status, 0)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_status_LEN 1
#define DT_N_S_entropy_bt_hci_P_status_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible {"zephyr,bt-hci-entropy"}
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0 "zephyr,bt-hci-entropy"
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED zephyr,bt-hci-entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_TOKEN zephyr_bt_hci_entropy
#define DT_N_S_entropy_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_BT_HCI_ENTROPY
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_entropy_bt_hci, compatible, 0)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_entropy_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_entropy_bt_hci_P_compatible_LEN 1
#define DT_N_S_entropy_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_zephyr_deferred_init 0
#define DT_N_S_entropy_bt_hci_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_wakeup_source 0
#define DT_N_S_entropy_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_entropy_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 35
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 26
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_1ff0000) fn(DT_N_S_soc_S_uicr_1ff8000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_21000000) fn(DT_N_S_soc_S_clock_41005000) fn(DT_N_S_soc_S_power_41005000) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc_S_random_41009000) fn(DT_N_S_soc_S_gpiote_4100a000) fn(DT_N_S_soc_S_watchdog_4100b000) fn(DT_N_S_soc_S_timer_4100c000) fn(DT_N_S_soc_S_ecb_4100d000) fn(DT_N_S_soc_S_ccm_4100e000) fn(DT_N_S_soc_S_dppic_4100f000) fn(DT_N_S_soc_S_temp_41010000) fn(DT_N_S_soc_S_rtc_41011000) fn(DT_N_S_soc_S_mbox_41012000) fn(DT_N_S_soc_S_i2c_41013000) fn(DT_N_S_soc_S_spi_41013000) fn(DT_N_S_soc_S_uart_41013000) fn(DT_N_S_soc_S_egu_41014000) fn(DT_N_S_soc_S_rtc_41016000) fn(DT_N_S_soc_S_timer_41018000) fn(DT_N_S_soc_S_timer_41019000) fn(DT_N_S_soc_S_swi_4101a000) fn(DT_N_S_soc_S_swi_4101b000) fn(DT_N_S_soc_S_swi_4101c000) fn(DT_N_S_soc_S_swi_4101d000) fn(DT_N_S_soc_S_acl_41080000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc_S_vmc_41081000) fn(DT_N_S_soc_S_gpio_418c0500) fn(DT_N_S_soc_S_gpio_418c0800)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_1ff0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_1ff8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_21000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_41005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_41009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_4100a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_4100b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4100c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4100d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4100e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dppic_4100f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_41010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_41011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_41012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_41013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_41013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_41013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_41014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_41016000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_41018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_41019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_41080000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vmc_41081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0500) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0800)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4100c000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__) fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_41011000, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_41013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_41013000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_41013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_41016000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_41018000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_41019000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_4100c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_41011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_41013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_41013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_41013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_41016000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_41018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_41019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_1ff0000) fn(DT_N_S_soc_S_uicr_1ff8000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_21000000) fn(DT_N_S_soc_S_clock_41005000) fn(DT_N_S_soc_S_power_41005000) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc_S_random_41009000) fn(DT_N_S_soc_S_gpiote_4100a000) fn(DT_N_S_soc_S_watchdog_4100b000) fn(DT_N_S_soc_S_ecb_4100d000) fn(DT_N_S_soc_S_ccm_4100e000) fn(DT_N_S_soc_S_dppic_4100f000) fn(DT_N_S_soc_S_temp_41010000) fn(DT_N_S_soc_S_mbox_41012000) fn(DT_N_S_soc_S_egu_41014000) fn(DT_N_S_soc_S_swi_4101a000) fn(DT_N_S_soc_S_swi_4101b000) fn(DT_N_S_soc_S_swi_4101c000) fn(DT_N_S_soc_S_swi_4101d000) fn(DT_N_S_soc_S_acl_41080000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc_S_vmc_41081000) fn(DT_N_S_soc_S_gpio_418c0500) fn(DT_N_S_soc_S_gpio_418c0800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_1ff0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_1ff8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_21000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_41005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_41009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_4100a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_4100b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4100d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4100e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dppic_4100f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_41010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_41012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_41014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101a000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_41080000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vmc_41081000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0500) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0800)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__) fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5
#define DT_N_S_soc_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/interrupt-controller@e000e100 */ \
	7, /* /soc/gpiote@4100a000 */ \
	8, /* /soc/gpio@418c0500 */ \
	9, /* /soc/gpio@418c0800 */ \
	13, /* /soc/spi@41013000 */ \
	16, /* /soc/timer@41018000 */ \
	27, /* /soc/mbox@41012000 */ \
	39, /* /soc/acl@41080000 */ \
	40, /* /soc/ccm@4100e000 */ \
	41, /* /soc/clock@41005000 */ \
	42, /* /soc/dppic@4100f000 */ \
	43, /* /soc/ecb@4100d000 */ \
	44, /* /soc/egu@41014000 */ \
	45, /* /soc/ficr@1ff0000 */ \
	46, /* /soc/i2c@41013000 */ \
	47, /* /soc/memory@20000000 */ \
	48, /* /soc/memory@21000000 */ \
	49, /* /soc/random@41009000 */ \
	50, /* /soc/rtc@41011000 */ \
	51, /* /soc/rtc@41016000 */ \
	52, /* /soc/swi@4101a000 */ \
	53, /* /soc/swi@4101b000 */ \
	54, /* /soc/swi@4101c000 */ \
	55, /* /soc/swi@4101d000 */ \
	56, /* /soc/temp@41010000 */ \
	57, /* /soc/timer@4100c000 */ \
	58, /* /soc/timer@41019000 */ \
	59, /* /soc/timer@e000e010 */ \
	60, /* /soc/uart@41013000 */ \
	61, /* /soc/uicr@1ff8000 */ \
	62, /* /soc/vmc@41081000 */ \
	63, /* /soc/watchdog@4100b000 */ \
	64, /* /soc/flash-controller@41080000 */ \
	71, /* /soc/power@41005000 */ \
	74, /* /soc/radio@41008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf5340_cpunet_qkaa DT_N_S_soc
#define DT_N_INST_0_nordic_nrf5340_cpunet      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf53               DT_N_S_soc
#define DT_N_INST_0_simple_bus                 DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf5340_cpunet_qkaa 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "nrf5340-cpunet-qkaa"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf5340_cpunet 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "nrf5340-cpunet"
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf53 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2 "Nordic Semiconductor"
#define DT_N_S_soc_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_2 "nrf53"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nrf5340-cpunet-qkaa", "nordic,nrf5340-cpunet", "nordic,nrf53", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nrf5340-cpunet-qkaa"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf5340-cpunet-qkaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN nordic_nrf5340_cpunet_qkaa
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF5340_CPUNET_QKAA
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nrf5340-cpunet"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf5340-cpunet
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN nordic_nrf5340_cpunet
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF5340_CPUNET
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nrf53"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED nordic,nrf53
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN nordic_nrf53
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN NORDIC_NRF53
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_HASH MNKByYDCdVxyLwiy4A_bv2jZfVhfDT01mZ2_1uEhUYQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 6
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	7, /* /soc/gpiote@4100a000 */ \
	13, /* /soc/spi@41013000 */ \
	16, /* /soc/timer@41018000 */ \
	27, /* /soc/mbox@41012000 */ \
	40, /* /soc/ccm@4100e000 */ \
	41, /* /soc/clock@41005000 */ \
	43, /* /soc/ecb@4100d000 */ \
	44, /* /soc/egu@41014000 */ \
	46, /* /soc/i2c@41013000 */ \
	49, /* /soc/random@41009000 */ \
	50, /* /soc/rtc@41011000 */ \
	51, /* /soc/rtc@41016000 */ \
	52, /* /soc/swi@4101a000 */ \
	53, /* /soc/swi@4101b000 */ \
	54, /* /soc/swi@4101c000 */ \
	55, /* /soc/swi@4101d000 */ \
	56, /* /soc/temp@41010000 */ \
	57, /* /soc/timer@4100c000 */ \
	58, /* /soc/timer@41019000 */ \
	60, /* /soc/uart@41013000 */ \
	63, /* /soc/watchdog@4100b000 */ \
	71, /* /soc/power@41005000 */ \
	74, /* /soc/radio@41008000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v8m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v8m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V8M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@4100a000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_4100a000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_4100a000_PATH "/soc/gpiote@4100a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpiote_4100a000_FULL_NAME "gpiote@4100a000"
#define DT_N_S_soc_S_gpiote_4100a000_FULL_NAME_UNQUOTED gpiote@4100a000
#define DT_N_S_soc_S_gpiote_4100a000_FULL_NAME_TOKEN gpiote_4100a000
#define DT_N_S_soc_S_gpiote_4100a000_FULL_NAME_UPPER_TOKEN GPIOTE_4100A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_4100a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpiote_4100a000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpiote_4100a000_NODELABEL_NUM 2
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_NODELABEL(fn) fn(gpiote) fn(gpiote0)
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiote, __VA_ARGS__) fn(gpiote0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpiote_4100a000_CHILD_NUM 0
#define DT_N_S_soc_S_gpiote_4100a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpiote_4100a000_HASH JWTHIEKqBxI2iNpXleh4G_hbAuftUUyM9AOJqPfPl_E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_4100a000_ORD 7
#define DT_N_S_soc_S_gpiote_4100a000_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_4100a000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_4100a000_SUPPORTS_ORDS \
	8, /* /soc/gpio@418c0500 */ \
	9, /* /soc/gpio@418c0800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_4100a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_4100a000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_4100a000
#define DT_N_NODELABEL_gpiote0        DT_N_S_soc_S_gpiote_4100a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpiote_4100a000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_4100a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_REG_IDX_0_VAL_ADDRESS 1090560000 /* 0x4100a000 */
#define DT_N_S_soc_S_gpiote_4100a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_4100a000_RANGES_NUM 0
#define DT_N_S_soc_S_gpiote_4100a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpiote_4100a000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpiote_4100a000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_4100a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpiote_4100a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_COMPAT_MODEL_IDX_0 "nrf-gpiote"
#define DT_N_S_soc_S_gpiote_4100a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpiote_4100a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_4100a000_P_reg {1090560000 /* 0x4100a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_4100a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_reg_IDX_0 1090560000
#define DT_N_S_soc_S_gpiote_4100a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_4100a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_interrupts {10 /* 0xa */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_4100a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_gpiote_4100a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_4100a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_no_port_event 0
#define DT_N_S_soc_S_gpiote_4100a000_P_no_port_event_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_fixed_channels_supported 0
#define DT_N_S_soc_S_gpiote_4100a000_P_fixed_channels_supported_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_instance 0
#define DT_N_S_soc_S_gpiote_4100a000_P_instance_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_status "okay"
#define DT_N_S_soc_S_gpiote_4100a000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpiote_4100a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpiote_4100a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_4100a000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpiote_4100a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_4100a000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_4100a000, status, 0)
#define DT_N_S_soc_S_gpiote_4100a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_4100a000, status, 0)
#define DT_N_S_soc_S_gpiote_4100a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_4100a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_4100a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_4100a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_4100a000_P_status_LEN 1
#define DT_N_S_soc_S_gpiote_4100a000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpiote
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpiote
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIOTE
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_4100a000, compatible, 0)
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpiote_4100a000, compatible, 0)
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_4100a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpiote_4100a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_4100a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpiote_4100a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_wakeup_source 0
#define DT_N_S_soc_S_gpiote_4100a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpiote_4100a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpiote_4100a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@418c0500
 *
 * Node identifier: DT_N_S_soc_S_gpio_418c0500
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_418c0500_PATH "/soc/gpio@418c0500"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_418c0500_FULL_NAME "gpio@418c0500"
#define DT_N_S_soc_S_gpio_418c0500_FULL_NAME_UNQUOTED gpio@418c0500
#define DT_N_S_soc_S_gpio_418c0500_FULL_NAME_TOKEN gpio_418c0500
#define DT_N_S_soc_S_gpio_418c0500_FULL_NAME_UPPER_TOKEN GPIO_418C0500

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_418c0500_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_418c0500_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_418c0500_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_418c0500_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_418c0500_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_418c0500_HASH DUFiBdPJxvbx2YgheIMX2wNclOd2hRll0AQ_pgZb1L0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_418c0500_ORD 8
#define DT_N_S_soc_S_gpio_418c0500_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_418c0500_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/gpiote@4100a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_418c0500_SUPPORTS_ORDS \
	13, /* /soc/spi@41013000 */ \
	15, /* /fem */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_418c0500_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_gpio_418c0500
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_gpio_418c0500

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_418c0500_REG_NUM 1
#define DT_N_S_soc_S_gpio_418c0500_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_REG_IDX_0_VAL_ADDRESS 1099695360 /* 0x418c0500 */
#define DT_N_S_soc_S_gpio_418c0500_REG_IDX_0_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_418c0500_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_418c0500_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_418c0500_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_418c0500_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_418c0500_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_418c0500_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_418c0500_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_418c0500_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_418c0500_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_418c0500_P_reg {1099695360 /* 0x418c0500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_418c0500_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_reg_IDX_0 1099695360
#define DT_N_S_soc_S_gpio_418c0500_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_reg_IDX_1 768
#define DT_N_S_soc_S_gpio_418c0500_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance DT_N_S_soc_S_gpiote_4100a000
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_IDX_0 DT_N_S_soc_S_gpiote_4100a000
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_IDX_0_PH DT_N_S_soc_S_gpiote_4100a000
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_418c0500, gpiote_instance, 0)
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_418c0500, gpiote_instance, 0)
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_418c0500, gpiote_instance, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_418c0500, gpiote_instance, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_LEN 1
#define DT_N_S_soc_S_gpio_418c0500_P_gpiote_instance_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_port 0
#define DT_N_S_soc_S_gpio_418c0500_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_418c0500_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_ngpios 32
#define DT_N_S_soc_S_gpio_418c0500_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_status "okay"
#define DT_N_S_soc_S_gpio_418c0500_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_418c0500_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_418c0500_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_418c0500_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_418c0500_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_418c0500_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_418c0500, status, 0)
#define DT_N_S_soc_S_gpio_418c0500_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_418c0500, status, 0)
#define DT_N_S_soc_S_gpio_418c0500_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_418c0500, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_418c0500, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_P_status_LEN 1
#define DT_N_S_soc_S_gpio_418c0500_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_418c0500, compatible, 0)
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_418c0500, compatible, 0)
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_418c0500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_418c0500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_418c0500_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_418c0500_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_418c0500_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0500_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_418c0500_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@418c0800
 *
 * Node identifier: DT_N_S_soc_S_gpio_418c0800
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_418c0800_PATH "/soc/gpio@418c0800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_418c0800_FULL_NAME "gpio@418c0800"
#define DT_N_S_soc_S_gpio_418c0800_FULL_NAME_UNQUOTED gpio@418c0800
#define DT_N_S_soc_S_gpio_418c0800_FULL_NAME_TOKEN gpio_418c0800
#define DT_N_S_soc_S_gpio_418c0800_FULL_NAME_UPPER_TOKEN GPIO_418C0800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_418c0800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_418c0800_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_418c0800_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_NODELABEL(fn) fn(gpio1)
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_418c0800_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_418c0800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_gpio_418c0800_HASH 1utAERLRr_KL1NdTvJuvwr0eSx8u6nXz8jsW4HtEQRc

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_418c0800_ORD 9
#define DT_N_S_soc_S_gpio_418c0800_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_418c0800_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/gpiote@4100a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_418c0800_SUPPORTS_ORDS \
	15, /* /fem */ \
	18, /* /buttons */ \
	19, /* /buttons/button_0 */ \
	20, /* /buttons/button_1 */ \
	29, /* /leds */ \
	30, /* /leds/led_1 */ \
	31, /* /leds/led_2 */ \
	32, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_418c0800_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpio DT_N_S_soc_S_gpio_418c0800
#define DT_N_NODELABEL_gpio1        DT_N_S_soc_S_gpio_418c0800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_418c0800_REG_NUM 1
#define DT_N_S_soc_S_gpio_418c0800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_REG_IDX_0_VAL_ADDRESS 1099696128 /* 0x418c0800 */
#define DT_N_S_soc_S_gpio_418c0800_REG_IDX_0_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_gpio_418c0800_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_418c0800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_418c0800_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_418c0800_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_418c0800_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_gpio_418c0800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_gpio_418c0800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_COMPAT_MODEL_IDX_0 "nrf-gpio"
#define DT_N_S_soc_S_gpio_418c0800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_418c0800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_418c0800_P_reg {1099696128 /* 0x418c0800 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_gpio_418c0800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_reg_IDX_0 1099696128
#define DT_N_S_soc_S_gpio_418c0800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_reg_IDX_1 768
#define DT_N_S_soc_S_gpio_418c0800_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance DT_N_S_soc_S_gpiote_4100a000
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_IDX_0 DT_N_S_soc_S_gpiote_4100a000
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_IDX_0_PH DT_N_S_soc_S_gpiote_4100a000
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_418c0800, gpiote_instance, 0)
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_418c0800, gpiote_instance, 0)
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_418c0800, gpiote_instance, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_418c0800, gpiote_instance, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_LEN 1
#define DT_N_S_soc_S_gpio_418c0800_P_gpiote_instance_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_port 1
#define DT_N_S_soc_S_gpio_418c0800_P_port_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_418c0800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_ngpios 16
#define DT_N_S_soc_S_gpio_418c0800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_status "okay"
#define DT_N_S_soc_S_gpio_418c0800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_418c0800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_418c0800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_418c0800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_418c0800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_418c0800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_418c0800, status, 0)
#define DT_N_S_soc_S_gpio_418c0800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_418c0800, status, 0)
#define DT_N_S_soc_S_gpio_418c0800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_418c0800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_418c0800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_P_status_LEN 1
#define DT_N_S_soc_S_gpio_418c0800_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpio
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpio
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPIO
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_418c0800, compatible, 0)
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_418c0800, compatible, 0)
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_418c0800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_418c0800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_418c0800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_418c0800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_418c0800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_418c0800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_418c0800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = nordic,nrf-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/nordic,nrf-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"
#define DT_N_S_pin_controller_FULL_NAME_UNQUOTED pin-controller
#define DT_N_S_pin_controller_FULL_NAME_TOKEN pin_controller
#define DT_N_S_pin_controller_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_NODELABEL_NUM 1
#define DT_N_S_pin_controller_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pin_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_CHILD_NUM 4
#define DT_N_S_pin_controller_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_spi0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_spi0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_sleep)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_sleep, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_HASH bWf59uCG_pY5hQAcoRx7FSfuctl8KNxAtmdgsI6QClA

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 10
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	11, /* /pin-controller/spi0_default */ \
	12, /* /pin-controller/spi0_sleep */ \
	35, /* /pin-controller/uart0_default */ \
	37, /* /pin-controller/uart0_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl         DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_IRQ_LEVEL 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_nordic_nrf_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "nrf-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"nordic,nrf-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_IDX_0 "nordic,nrf-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_PINCTRL
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_deferred_init 0
#define DT_N_S_pin_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_default_PATH "/pin-controller/spi0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_default_FULL_NAME "spi0_default"
#define DT_N_S_pin_controller_S_spi0_default_FULL_NAME_UNQUOTED spi0_default
#define DT_N_S_pin_controller_S_spi0_default_FULL_NAME_TOKEN spi0_default
#define DT_N_S_pin_controller_S_spi0_default_FULL_NAME_UPPER_TOKEN SPI0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_NODELABEL(fn) fn(spi0_default)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_spi0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group1)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group1)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group1)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group1)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi0_default_HASH ajJ2fx2Nn98Z3zsXnYdkU2Jz_X96RmXiCjmRiGdWBQs

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_default_ORD 11
#define DT_N_S_pin_controller_S_spi0_default_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_default_REQUIRES_ORDS \
	10, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_default_SUPPORTS_ORDS \
	13, /* /soc/spi@41013000 */ \
	33, /* /pin-controller/spi0_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_default_EXISTS 1
#define DT_N_NODELABEL_spi0_default DT_N_S_pin_controller_S_spi0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_sleep_PATH "/pin-controller/spi0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_sleep_FULL_NAME "spi0_sleep"
#define DT_N_S_pin_controller_S_spi0_sleep_FULL_NAME_UNQUOTED spi0_sleep
#define DT_N_S_pin_controller_S_spi0_sleep_FULL_NAME_TOKEN spi0_sleep
#define DT_N_S_pin_controller_S_spi0_sleep_FULL_NAME_UPPER_TOKEN SPI0_SLEEP

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_sleep_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi0_sleep_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_NODELABEL(fn) fn(spi0_sleep)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_sleep_CHILD_NUM 1
#define DT_N_S_pin_controller_S_spi0_sleep_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi0_sleep_HASH dQWk5Me9l308cwN_BK0cQUeETh_fp2979fCGQUa1LWk

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_sleep_ORD 12
#define DT_N_S_pin_controller_S_spi0_sleep_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_sleep_REQUIRES_ORDS \
	10, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_sleep_SUPPORTS_ORDS \
	13, /* /soc/spi@41013000 */ \
	34, /* /pin-controller/spi0_sleep/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_sleep_EXISTS 1
#define DT_N_NODELABEL_spi0_sleep DT_N_S_pin_controller_S_spi0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/spi@41013000
 *
 * Node identifier: DT_N_S_soc_S_spi_41013000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE/dts/bindings/spi/nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_41013000_PATH "/soc/spi@41013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_41013000_FULL_NAME "spi@41013000"
#define DT_N_S_soc_S_spi_41013000_FULL_NAME_UNQUOTED spi@41013000
#define DT_N_S_soc_S_spi_41013000_FULL_NAME_TOKEN spi_41013000
#define DT_N_S_soc_S_spi_41013000_FULL_NAME_UPPER_TOKEN SPI_41013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_41013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_41013000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_41013000_NODELABEL_NUM 2
#define DT_N_S_soc_S_spi_41013000_FOREACH_NODELABEL(fn) fn(spi0) fn(fem_spi)
#define DT_N_S_soc_S_spi_41013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0, __VA_ARGS__) fn(fem_spi, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_41013000_CHILD_NUM 1
#define DT_N_S_soc_S_spi_41013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0)
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0)
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_41013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_41013000_HASH _ISo0ksrG9mmHM2WBL0Fy_Kvq7TENGJIK8grDmY_6sk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_41013000_ORD 13
#define DT_N_S_soc_S_spi_41013000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_41013000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/gpio@418c0500 */ \
	11, /* /pin-controller/spi0_default */ \
	12, /* /pin-controller/spi0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_41013000_SUPPORTS_ORDS \
	14, /* /soc/spi@41013000/nrf21540_fem_spi@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_41013000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim DT_N_S_soc_S_spi_41013000
#define DT_N_NODELABEL_spi0         DT_N_S_soc_S_spi_41013000
#define DT_N_NODELABEL_fem_spi      DT_N_S_soc_S_spi_41013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_41013000_REG_NUM 1
#define DT_N_S_soc_S_spi_41013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_REG_IDX_0_VAL_ADDRESS 1090596864 /* 0x41013000 */
#define DT_N_S_soc_S_spi_41013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_41013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_41013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_41013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_41013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_41013000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_spi_41013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_41013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_COMPAT_MODEL_IDX_0 "nrf-spim"
#define DT_N_S_soc_S_spi_41013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NUM 2
#define DT_N_S_soc_S_spi_41013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_41013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spi0_default
#define DT_N_S_soc_S_spi_41013000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_spi_41013000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_spi_41013000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_spi0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_spi_41013000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_spi_41013000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_rx_delay_supported 0
#define DT_N_S_soc_S_spi_41013000_P_rx_delay_supported_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_reg {1090596864 /* 0x41013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_41013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_reg_IDX_0 1090596864
#define DT_N_S_soc_S_spi_41013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_41013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_interrupts {19 /* 0x13 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spi_41013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_spi_41013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spi_41013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spi0_default
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spi0_default
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 1)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 1)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_41013000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_max_frequency 8000000
#define DT_N_S_soc_S_spi_41013000_P_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_overrun_character 255
#define DT_N_S_soc_S_spi_41013000_P_overrun_character_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_spi_41013000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_cross_domain_pins_supported 0
#define DT_N_S_soc_S_spi_41013000_P_cross_domain_pins_supported_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0500
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_IDX_0_VAL_pin 24
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_41013000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_status "disabled"
#define DT_N_S_soc_S_spi_41013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_41013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_41013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_41013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_41013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_41013000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000, status, 0)
#define DT_N_S_soc_S_spi_41013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000, status, 0)
#define DT_N_S_soc_S_spi_41013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_41013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_spi_41013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_spi_41013000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-spim
#define DT_N_S_soc_S_spi_41013000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_spim
#define DT_N_S_soc_S_spi_41013000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SPIM
#define DT_N_S_soc_S_spi_41013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000, compatible, 0)
#define DT_N_S_soc_S_spi_41013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000, compatible, 0)
#define DT_N_S_soc_S_spi_41013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_41013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_41013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_41013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_41013000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_spi0_sleep
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_spi0_sleep
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000, pinctrl_1, 0)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000, pinctrl_1, 0)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_spi_41013000_P_pinctrl_1_EXISTS 1

/*
 * Devicetree node: /soc/spi@41013000/nrf21540_fem_spi@0
 *
 * Node identifier: DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0
 *
 * Binding (compatible = nordic,nrf21540-fem-spi):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf21540-fem-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_PATH "/soc/spi@41013000/nrf21540_fem_spi@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FULL_NAME "nrf21540_fem_spi@0"
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FULL_NAME_UNQUOTED nrf21540_fem_spi@0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FULL_NAME_TOKEN nrf21540_fem_spi_0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FULL_NAME_UPPER_TOKEN NRF21540_FEM_SPI_0

/* Node parent (/soc/spi@41013000) identifier: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_PARENT DT_N_S_soc_S_spi_41013000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_NODELABEL(fn) fn(nrf_radio_fem_spi)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(nrf_radio_fem_spi, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_spi_41013000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_CHILD_NUM 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_HASH TxwF7bEuK6OTdIQxkiWtqaa0nk18_9nlOpvDzeXSmWs

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_ORD 14
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_REQUIRES_ORDS \
	13, /* /soc/spi@41013000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_SUPPORTS_ORDS \
	15, /* /fem */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_EXISTS 1
#define DT_N_INST_0_nordic_nrf21540_fem_spi DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0
#define DT_N_NODELABEL_nrf_radio_fem_spi    DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0

/* Bus info (controller: '/soc/spi@41013000', type: '['spi']') */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_BUS_spi 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_BUS DT_N_S_soc_S_spi_41013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_REG_NUM 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_COMPAT_MATCHES_nordic_nrf21540_fem_spi 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_COMPAT_MODEL_IDX_0 "nrf21540-fem-spi"
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_max_frequency 8000000
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_duplex 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_duplex_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_duplex_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_duplex_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_frame_format 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_frame_format_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_frame_format_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_frame_format_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_cpol 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_cpol_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_cpha 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_cpha_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_hold_cs 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_spi_hold_cs_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status "disabled"
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, status, 0)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, status, 0)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_LEN 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible {"nordic,nrf21540-fem-spi"}
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_IDX_0 "nordic,nrf21540-fem-spi"
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf21540-fem-spi
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_IDX_0_STRING_TOKEN nordic_nrf21540_fem_spi
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF21540_FEM_SPI
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, compatible, 0)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, compatible, 0)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /fem
 *
 * Node identifier: DT_N_S_fem
 *
 * Binding (compatible = nordic,nrf21540-fem):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf21540-fem.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_fem_PATH "/fem"

/* Node's name with unit-address: */
#define DT_N_S_fem_FULL_NAME "fem"
#define DT_N_S_fem_FULL_NAME_UNQUOTED fem
#define DT_N_S_fem_FULL_NAME_TOKEN fem
#define DT_N_S_fem_FULL_NAME_UPPER_TOKEN FEM

/* Node parent (/) identifier: */
#define DT_N_S_fem_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_fem_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_fem_NODELABEL_NUM 1
#define DT_N_S_fem_FOREACH_NODELABEL(fn) fn(nrf_radio_fem)
#define DT_N_S_fem_FOREACH_NODELABEL_VARGS(fn, ...) fn(nrf_radio_fem, __VA_ARGS__)
#define DT_N_S_fem_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_fem_CHILD_NUM 0
#define DT_N_S_fem_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_fem_FOREACH_CHILD(fn) 
#define DT_N_S_fem_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_fem_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_fem_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_fem_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_fem_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_fem_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_fem_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_fem_HASH sSUPWLFY443j4UPXWgRYSZ_zU8R4uS224zM__3kbn8I

/* Node's dependency ordinal: */
#define DT_N_S_fem_ORD 15
#define DT_N_S_fem_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_fem_REQUIRES_ORDS \
	0, /* / */ \
	8, /* /soc/gpio@418c0500 */ \
	9, /* /soc/gpio@418c0800 */ \
	14, /* /soc/spi@41013000/nrf21540_fem_spi@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_fem_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_fem_EXISTS 1
#define DT_N_INST_0_nordic_nrf21540_fem DT_N_S_fem
#define DT_N_NODELABEL_nrf_radio_fem    DT_N_S_fem

/* Macros for properties that are special in the specification: */
#define DT_N_S_fem_REG_NUM 0
#define DT_N_S_fem_RANGES_NUM 0
#define DT_N_S_fem_FOREACH_RANGE(fn) 
#define DT_N_S_fem_IRQ_NUM 0
#define DT_N_S_fem_IRQ_LEVEL 0
#define DT_N_S_fem_COMPAT_MATCHES_nordic_nrf21540_fem 1
#define DT_N_S_fem_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_fem_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_fem_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_fem_COMPAT_MODEL_IDX_0 "nrf21540-fem"
#define DT_N_S_fem_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_fem_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_fem_P_tx_en_gpios_IDX_0_EXISTS 1
#define DT_N_S_fem_P_tx_en_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0500
#define DT_N_S_fem_P_tx_en_gpios_IDX_0_VAL_pin 30
#define DT_N_S_fem_P_tx_en_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_fem_P_tx_en_gpios_IDX_0_VAL_flags 0
#define DT_N_S_fem_P_tx_en_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_fem_P_tx_en_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_fem, tx_en_gpios, 0)
#define DT_N_S_fem_P_tx_en_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_fem, tx_en_gpios, 0)
#define DT_N_S_fem_P_tx_en_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_fem, tx_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_tx_en_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_fem, tx_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_tx_en_gpios_LEN 1
#define DT_N_S_fem_P_tx_en_gpios_EXISTS 1
#define DT_N_S_fem_P_rx_en_gpios_IDX_0_EXISTS 1
#define DT_N_S_fem_P_rx_en_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_fem_P_rx_en_gpios_IDX_0_VAL_pin 11
#define DT_N_S_fem_P_rx_en_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_fem_P_rx_en_gpios_IDX_0_VAL_flags 0
#define DT_N_S_fem_P_rx_en_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_fem_P_rx_en_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_fem, rx_en_gpios, 0)
#define DT_N_S_fem_P_rx_en_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_fem, rx_en_gpios, 0)
#define DT_N_S_fem_P_rx_en_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_fem, rx_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_rx_en_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_fem, rx_en_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_rx_en_gpios_LEN 1
#define DT_N_S_fem_P_rx_en_gpios_EXISTS 1
#define DT_N_S_fem_P_pdn_gpios_IDX_0_EXISTS 1
#define DT_N_S_fem_P_pdn_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_fem_P_pdn_gpios_IDX_0_VAL_pin 10
#define DT_N_S_fem_P_pdn_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_fem_P_pdn_gpios_IDX_0_VAL_flags 0
#define DT_N_S_fem_P_pdn_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_fem_P_pdn_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_fem, pdn_gpios, 0)
#define DT_N_S_fem_P_pdn_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_fem, pdn_gpios, 0)
#define DT_N_S_fem_P_pdn_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_fem, pdn_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_pdn_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_fem, pdn_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_pdn_gpios_LEN 1
#define DT_N_S_fem_P_pdn_gpios_EXISTS 1
#define DT_N_S_fem_P_mode_gpios_IDX_0_EXISTS 1
#define DT_N_S_fem_P_mode_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_fem_P_mode_gpios_IDX_0_VAL_pin 12
#define DT_N_S_fem_P_mode_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_fem_P_mode_gpios_IDX_0_VAL_flags 0
#define DT_N_S_fem_P_mode_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_fem_P_mode_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_fem, mode_gpios, 0)
#define DT_N_S_fem_P_mode_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_fem, mode_gpios, 0)
#define DT_N_S_fem_P_mode_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_fem, mode_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_mode_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_fem, mode_gpios, 0, __VA_ARGS__)
#define DT_N_S_fem_P_mode_gpios_LEN 1
#define DT_N_S_fem_P_mode_gpios_EXISTS 1
#define DT_N_S_fem_P_spi_if DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0
#define DT_N_S_fem_P_spi_if_IDX_0 DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0
#define DT_N_S_fem_P_spi_if_IDX_0_PH DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0
#define DT_N_S_fem_P_spi_if_IDX_0_EXISTS 1
#define DT_N_S_fem_P_spi_if_FOREACH_PROP_ELEM(fn) fn(DT_N_S_fem, spi_if, 0)
#define DT_N_S_fem_P_spi_if_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_fem, spi_if, 0)
#define DT_N_S_fem_P_spi_if_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_fem, spi_if, 0, __VA_ARGS__)
#define DT_N_S_fem_P_spi_if_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_fem, spi_if, 0, __VA_ARGS__)
#define DT_N_S_fem_P_spi_if_LEN 1
#define DT_N_S_fem_P_spi_if_EXISTS 1
#define DT_N_S_fem_P_tx_en_settle_time_us 26
#define DT_N_S_fem_P_tx_en_settle_time_us_EXISTS 1
#define DT_N_S_fem_P_rx_en_settle_time_us 11
#define DT_N_S_fem_P_rx_en_settle_time_us_EXISTS 1
#define DT_N_S_fem_P_pdn_settle_time_us 18
#define DT_N_S_fem_P_pdn_settle_time_us_EXISTS 1
#define DT_N_S_fem_P_trx_hold_time_us 3
#define DT_N_S_fem_P_trx_hold_time_us_EXISTS 1
#define DT_N_S_fem_P_supply_voltage_mv 3000
#define DT_N_S_fem_P_supply_voltage_mv_EXISTS 1
#define DT_N_S_fem_P_compatible {"nordic,nrf21540-fem"}
#define DT_N_S_fem_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_fem_P_compatible_IDX_0 "nordic,nrf21540-fem"
#define DT_N_S_fem_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf21540-fem
#define DT_N_S_fem_P_compatible_IDX_0_STRING_TOKEN nordic_nrf21540_fem
#define DT_N_S_fem_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF21540_FEM
#define DT_N_S_fem_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_fem, compatible, 0)
#define DT_N_S_fem_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_fem, compatible, 0)
#define DT_N_S_fem_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_fem, compatible, 0, __VA_ARGS__)
#define DT_N_S_fem_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_fem, compatible, 0, __VA_ARGS__)
#define DT_N_S_fem_P_compatible_LEN 1
#define DT_N_S_fem_P_compatible_EXISTS 1
#define DT_N_S_fem_P_zephyr_deferred_init 0
#define DT_N_S_fem_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_fem_P_wakeup_source 0
#define DT_N_S_fem_P_wakeup_source_EXISTS 1
#define DT_N_S_fem_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_fem_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@41018000
 *
 * Node identifier: DT_N_S_soc_S_timer_41018000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_41018000_PATH "/soc/timer@41018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_41018000_FULL_NAME "timer@41018000"
#define DT_N_S_soc_S_timer_41018000_FULL_NAME_UNQUOTED timer@41018000
#define DT_N_S_soc_S_timer_41018000_FULL_NAME_TOKEN timer_41018000
#define DT_N_S_soc_S_timer_41018000_FULL_NAME_UPPER_TOKEN TIMER_41018000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_41018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_41018000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_41018000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_41018000_FOREACH_NODELABEL(fn) fn(timer1)
#define DT_N_S_soc_S_timer_41018000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41018000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_41018000_CHILD_NUM 0
#define DT_N_S_soc_S_timer_41018000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_41018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_41018000_HASH aRhooAnfDq9Uq6gSkO_MibJQpp4U0BwS5qvQlM0NieE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_41018000_ORD 16
#define DT_N_S_soc_S_timer_41018000_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_41018000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_41018000_SUPPORTS_ORDS \
	17, /* /sw-pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_41018000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_timer_41018000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_timer_41018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_41018000_REG_NUM 1
#define DT_N_S_soc_S_timer_41018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_REG_IDX_0_VAL_ADDRESS 1090617344 /* 0x41018000 */
#define DT_N_S_soc_S_timer_41018000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_41018000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_41018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_41018000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_41018000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_41018000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_41018000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_41018000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_41018000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_41018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_41018000_P_reg {1090617344 /* 0x41018000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_41018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_reg_IDX_0 1090617344
#define DT_N_S_soc_S_timer_41018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_41018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_cc_num 8
#define DT_N_S_soc_S_timer_41018000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_41018000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_41018000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timer_41018000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_41018000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_prescaler 0
#define DT_N_S_soc_S_timer_41018000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_zli 0
#define DT_N_S_soc_S_timer_41018000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_status "disabled"
#define DT_N_S_soc_S_timer_41018000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_41018000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_41018000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_41018000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_41018000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_41018000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_41018000, status, 0)
#define DT_N_S_soc_S_timer_41018000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_41018000, status, 0)
#define DT_N_S_soc_S_timer_41018000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_41018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41018000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_41018000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41018000_P_status_LEN 1
#define DT_N_S_soc_S_timer_41018000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_41018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_41018000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_41018000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_41018000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_41018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_41018000, compatible, 0)
#define DT_N_S_soc_S_timer_41018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_41018000, compatible, 0)
#define DT_N_S_soc_S_timer_41018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_41018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_41018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41018000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_41018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_41018000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_41018000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_41018000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_41018000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /sw-pwm
 *
 * Node identifier: DT_N_S_sw_pwm
 *
 * Binding (compatible = nordic,nrf-sw-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/nordic,nrf-sw-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sw_pwm_PATH "/sw-pwm"

/* Node's name with unit-address: */
#define DT_N_S_sw_pwm_FULL_NAME "sw-pwm"
#define DT_N_S_sw_pwm_FULL_NAME_UNQUOTED sw-pwm
#define DT_N_S_sw_pwm_FULL_NAME_TOKEN sw_pwm
#define DT_N_S_sw_pwm_FULL_NAME_UPPER_TOKEN SW_PWM

/* Node parent (/) identifier: */
#define DT_N_S_sw_pwm_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_sw_pwm_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_sw_pwm_NODELABEL_NUM 1
#define DT_N_S_sw_pwm_FOREACH_NODELABEL(fn) fn(sw_pwm)
#define DT_N_S_sw_pwm_FOREACH_NODELABEL_VARGS(fn, ...) fn(sw_pwm, __VA_ARGS__)
#define DT_N_S_sw_pwm_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_sw_pwm_CHILD_NUM 0
#define DT_N_S_sw_pwm_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_sw_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_sw_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_sw_pwm_HASH JNm3Tbl_p6_ln0HamgYZw_0vVGqAfhUnZXbZIAU6T3w

/* Node's dependency ordinal: */
#define DT_N_S_sw_pwm_ORD 17
#define DT_N_S_sw_pwm_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sw_pwm_REQUIRES_ORDS \
	0, /* / */ \
	16, /* /soc/timer@41018000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sw_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_sw_pwm_EXISTS 1
#define DT_N_INST_0_nordic_nrf_sw_pwm DT_N_S_sw_pwm
#define DT_N_NODELABEL_sw_pwm         DT_N_S_sw_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_sw_pwm_REG_NUM 0
#define DT_N_S_sw_pwm_RANGES_NUM 0
#define DT_N_S_sw_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_sw_pwm_IRQ_NUM 0
#define DT_N_S_sw_pwm_IRQ_LEVEL 0
#define DT_N_S_sw_pwm_COMPAT_MATCHES_nordic_nrf_sw_pwm 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_COMPAT_MODEL_IDX_0 "nrf-sw-pwm"
#define DT_N_S_sw_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sw_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sw_pwm_P_generator DT_N_S_soc_S_timer_41018000
#define DT_N_S_sw_pwm_P_generator_IDX_0 DT_N_S_soc_S_timer_41018000
#define DT_N_S_sw_pwm_P_generator_IDX_0_PH DT_N_S_soc_S_timer_41018000
#define DT_N_S_sw_pwm_P_generator_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, generator, 0)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, generator, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_generator_LEN 1
#define DT_N_S_sw_pwm_P_generator_EXISTS 1
#define DT_N_S_sw_pwm_P_clock_prescaler 0
#define DT_N_S_sw_pwm_P_clock_prescaler_EXISTS 1
#define DT_N_S_sw_pwm_P_status "disabled"
#define DT_N_S_sw_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_sw_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_sw_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_sw_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_sw_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_sw_pwm_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, status, 0)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_status_LEN 1
#define DT_N_S_sw_pwm_P_status_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible {"nordic,nrf-sw-pwm"}
#define DT_N_S_sw_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sw_pwm_P_compatible_IDX_0 "nordic,nrf-sw-pwm"
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-sw-pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_sw_pwm
#define DT_N_S_sw_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SW_PWM
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_sw_pwm, compatible, 0)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_sw_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_sw_pwm_P_compatible_LEN 1
#define DT_N_S_sw_pwm_P_compatible_EXISTS 1
#define DT_N_S_sw_pwm_P_zephyr_deferred_init 0
#define DT_N_S_sw_pwm_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_sw_pwm_P_wakeup_source 0
#define DT_N_S_sw_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_sw_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"
#define DT_N_S_buttons_FULL_NAME_UNQUOTED buttons
#define DT_N_S_buttons_FULL_NAME_TOKEN buttons
#define DT_N_S_buttons_FULL_NAME_UPPER_TOKEN BUTTONS

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_NODELABEL_NUM 0
#define DT_N_S_buttons_FOREACH_NODELABEL(fn) 
#define DT_N_S_buttons_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_buttons_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_CHILD_NUM 2
#define DT_N_S_buttons_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_buttons_HASH 5PjIhtTrOdD7xh1YVA9zDmUgeKJd76iHjBCCBzXYfdo

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 18
#define DT_N_S_buttons_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/gpio@418c0800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	19, /* /buttons/button_0 */ \
	20, /* /buttons/button_1 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_IRQ_LEVEL 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_polling_mode 0
#define DT_N_S_buttons_P_polling_mode_EXISTS 1
#define DT_N_S_buttons_P_no_disconnect 0
#define DT_N_S_buttons_P_no_disconnect_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_zephyr_deferred_init 0
#define DT_N_S_buttons_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"
#define DT_N_S_buttons_S_button_0_FULL_NAME_UNQUOTED button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_TOKEN button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_UPPER_TOKEN BUTTON_0

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_0_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL(fn) fn(button0)
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(button0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_buttons) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_0_CHILD_NUM 0
#define DT_N_S_buttons_S_button_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_buttons_S_button_0_HASH Dse5y6YeLZXYDvVJH_dSbYTpKqPf642pyShJZc0TmQ0

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 19
#define DT_N_S_buttons_S_button_0_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	9, /* /soc/gpio@418c0800 */ \
	18, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_button0 DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "Push button 1"
#define DT_N_S_buttons_S_button_0_P_label_STRING_UNQUOTED Push button 1
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN Push_button_1
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN PUSH_BUTTON_1
#define DT_N_S_buttons_S_button_0_P_label_IDX_0 "Push button 1"
#define DT_N_S_buttons_S_button_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_LEN 1
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_zephyr_code 11
#define DT_N_S_buttons_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /buttons/button_1
 *
 * Node identifier: DT_N_S_buttons_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_1_PATH "/buttons/button_1"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_1_FULL_NAME "button_1"
#define DT_N_S_buttons_S_button_1_FULL_NAME_UNQUOTED button_1
#define DT_N_S_buttons_S_button_1_FULL_NAME_TOKEN button_1
#define DT_N_S_buttons_S_button_1_FULL_NAME_UPPER_TOKEN BUTTON_1

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_1_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_1_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_1_FOREACH_NODELABEL(fn) fn(button1)
#define DT_N_S_buttons_S_button_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(button1, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_buttons) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_1_CHILD_NUM 0
#define DT_N_S_buttons_S_button_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_buttons_S_button_1_HASH k4onuseAcjGw86JsSooa1FdW0MUeW8bg6xDK8YDYQ_M

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_1_ORD 20
#define DT_N_S_buttons_S_button_1_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_1_REQUIRES_ORDS \
	9, /* /soc/gpio@418c0800 */ \
	18, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_1_EXISTS 1
#define DT_N_ALIAS_sw1         DT_N_S_buttons_S_button_1
#define DT_N_NODELABEL_button1 DT_N_S_buttons_S_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_1_REG_NUM 0
#define DT_N_S_buttons_S_button_1_RANGES_NUM 0
#define DT_N_S_buttons_S_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_1_IRQ_NUM 0
#define DT_N_S_buttons_S_button_1_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_1, gpios, 0)
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_1, gpios, 0)
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_label "Push button 2"
#define DT_N_S_buttons_S_button_1_P_label_STRING_UNQUOTED Push button 2
#define DT_N_S_buttons_S_button_1_P_label_STRING_TOKEN Push_button_2
#define DT_N_S_buttons_S_button_1_P_label_STRING_UPPER_TOKEN PUSH_BUTTON_2
#define DT_N_S_buttons_S_button_1_P_label_IDX_0 "Push button 2"
#define DT_N_S_buttons_S_button_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_1, label, 0)
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_1, label, 0)
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_1, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_1, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_label_LEN 1
#define DT_N_S_buttons_S_button_1_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_zephyr_code 2
#define DT_N_S_buttons_S_button_1_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 21
#define DT_N_S_cpus_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	22, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = arm,cortex-m33):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m33.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UNQUOTED cpu@1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_TOKEN cpu_1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UPPER_TOKEN CPU_1

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_NODELABEL_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM 1
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_1_HASH 9JjWVNk3G1ibyc8ZwlqKxfoxH3N71yBfTFpYJTDe_oU

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 22
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	21, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS \
	23, /* /cpus/cpu@1/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33 DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_arm_cortex_m33 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "cortex-m33"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_compatible {"arm,cortex-m33"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "arm,cortex-m33"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m33
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m33
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M33
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv8m-mpu):
 *   $ZEPHYR_BASE/dts/bindings/mmu_mpu/arm,armv8m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_PATH "/cpus/cpu@1/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FULL_NAME_UNQUOTED mpu@e000ed90
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FULL_NAME_TOKEN mpu_e000ed90
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FULL_NAME_UPPER_TOKEN MPU_E000ED90

/* Node parent (/cpus/cpu@1) identifier: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_1

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_NODELABEL(fn) fn(mpu)
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_NODELABEL_VARGS(fn, ...) fn(mpu, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_HASH WIpLsSVqrgg_Ifkgwahs2BDCxrJGwsCJbBZX_XToCSs

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_ORD 23
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_REQUIRES_ORDS \
	22, /* /cpus/cpu@1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv8m_mpu DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv8m_mpu 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_COMPAT_MODEL_IDX_0 "armv8m-mpu"
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible {"arm,armv8m-mpu"}
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv8m-mpu"
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-mpu
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_mpu
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_MPU
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ipc
 *
 * Node identifier: DT_N_S_ipc
 */

/* Node's full path: */
#define DT_N_S_ipc_PATH "/ipc"

/* Node's name with unit-address: */
#define DT_N_S_ipc_FULL_NAME "ipc"
#define DT_N_S_ipc_FULL_NAME_UNQUOTED ipc
#define DT_N_S_ipc_FULL_NAME_TOKEN ipc
#define DT_N_S_ipc_FULL_NAME_UPPER_TOKEN IPC

/* Node parent (/) identifier: */
#define DT_N_S_ipc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_ipc_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_ipc_NODELABEL_NUM 0
#define DT_N_S_ipc_FOREACH_NODELABEL(fn) 
#define DT_N_S_ipc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_ipc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_ipc_CHILD_NUM 1
#define DT_N_S_ipc_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_ipc_FOREACH_CHILD(fn) fn(DT_N_S_ipc_S_ipc0)
#define DT_N_S_ipc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0)
#define DT_N_S_ipc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__)
#define DT_N_S_ipc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__)
#define DT_N_S_ipc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_ipc_S_ipc0)
#define DT_N_S_ipc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0)
#define DT_N_S_ipc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__)
#define DT_N_S_ipc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_ipc_HASH 9xA47g0T_7hKqLwuA_qSzPUIff1pBEqgQ1vtZQGOBc4

/* Node's dependency ordinal: */
#define DT_N_S_ipc_ORD 24
#define DT_N_S_ipc_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ipc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ipc_SUPPORTS_ORDS \
	28, /* /ipc/ipc0 */

/* Existence and alternate IDs: */
#define DT_N_S_ipc_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_ipc_REG_NUM 0
#define DT_N_S_ipc_RANGES_NUM 0
#define DT_N_S_ipc_FOREACH_RANGE(fn) 
#define DT_N_S_ipc_IRQ_NUM 0
#define DT_N_S_ipc_IRQ_LEVEL 0
#define DT_N_S_ipc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ipc_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /reserved-memory
 *
 * Node identifier: DT_N_S_reserved_memory
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_PATH "/reserved-memory"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_FULL_NAME "reserved-memory"
#define DT_N_S_reserved_memory_FULL_NAME_UNQUOTED reserved-memory
#define DT_N_S_reserved_memory_FULL_NAME_TOKEN reserved_memory
#define DT_N_S_reserved_memory_FULL_NAME_UPPER_TOKEN RESERVED_MEMORY

/* Node parent (/) identifier: */
#define DT_N_S_reserved_memory_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_reserved_memory_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_reserved_memory_NODELABEL_NUM 0
#define DT_N_S_reserved_memory_FOREACH_NODELABEL(fn) 
#define DT_N_S_reserved_memory_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_reserved_memory_CHILD_NUM 1
#define DT_N_S_reserved_memory_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_reserved_memory_FOREACH_CHILD(fn) fn(DT_N_S_reserved_memory_S_memory_20070000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_reserved_memory_S_memory_20070000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_memory_20070000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_reserved_memory_S_memory_20070000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_reserved_memory_S_memory_20070000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_reserved_memory_S_memory_20070000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_memory_20070000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_reserved_memory_S_memory_20070000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_reserved_memory_HASH _4O_Cz0v63FrWZ0QRbIHWGjyasFighV7F_3EBd4HJFI

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_ORD 25
#define DT_N_S_reserved_memory_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_SUPPORTS_ORDS \
	26, /* /reserved-memory/memory@20070000 */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_REG_NUM 0
#define DT_N_S_reserved_memory_RANGES_NUM 0
#define DT_N_S_reserved_memory_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_IRQ_NUM 0
#define DT_N_S_reserved_memory_IRQ_LEVEL 0
#define DT_N_S_reserved_memory_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_P_ranges_EXISTS 1

/*
 * Devicetree node: /reserved-memory/memory@20070000
 *
 * Node identifier: DT_N_S_reserved_memory_S_memory_20070000
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_S_memory_20070000_PATH "/reserved-memory/memory@20070000"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_S_memory_20070000_FULL_NAME "memory@20070000"
#define DT_N_S_reserved_memory_S_memory_20070000_FULL_NAME_UNQUOTED memory@20070000
#define DT_N_S_reserved_memory_S_memory_20070000_FULL_NAME_TOKEN memory_20070000
#define DT_N_S_reserved_memory_S_memory_20070000_FULL_NAME_UPPER_TOKEN MEMORY_20070000

/* Node parent (/reserved-memory) identifier: */
#define DT_N_S_reserved_memory_S_memory_20070000_PARENT DT_N_S_reserved_memory

/* Node's index in its parent's list of children: */
#define DT_N_S_reserved_memory_S_memory_20070000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_reserved_memory_S_memory_20070000_NODELABEL_NUM 1
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_NODELABEL(fn) fn(sram0_shared)
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0_shared, __VA_ARGS__)
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_ANCESTOR(fn) fn(DT_N_S_reserved_memory) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_reserved_memory_S_memory_20070000_CHILD_NUM 0
#define DT_N_S_reserved_memory_S_memory_20070000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD(fn) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_reserved_memory_S_memory_20070000_HASH PsZnyYrnZTuK_LpljNtPHPcLcbFhFC98_4olknLZQzY

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_S_memory_20070000_ORD 26
#define DT_N_S_reserved_memory_S_memory_20070000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_S_memory_20070000_REQUIRES_ORDS \
	25, /* /reserved-memory */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_S_memory_20070000_SUPPORTS_ORDS \
	28, /* /ipc/ipc0 */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_S_memory_20070000_EXISTS 1
#define DT_N_NODELABEL_sram0_shared DT_N_S_reserved_memory_S_memory_20070000

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_S_memory_20070000_REG_NUM 1
#define DT_N_S_reserved_memory_S_memory_20070000_REG_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_20070000_REG_IDX_0_VAL_ADDRESS 537329664 /* 0x20070000 */
#define DT_N_S_reserved_memory_S_memory_20070000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_reserved_memory_S_memory_20070000_RANGES_NUM 0
#define DT_N_S_reserved_memory_S_memory_20070000_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_S_memory_20070000_IRQ_NUM 0
#define DT_N_S_reserved_memory_S_memory_20070000_IRQ_LEVEL 0
#define DT_N_S_reserved_memory_S_memory_20070000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_S_memory_20070000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_S_memory_20070000_P_reg {537329664 /* 0x20070000 */, 65536 /* 0x10000 */}
#define DT_N_S_reserved_memory_S_memory_20070000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_20070000_P_reg_IDX_0 537329664
#define DT_N_S_reserved_memory_S_memory_20070000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_reserved_memory_S_memory_20070000_P_reg_IDX_1 65536
#define DT_N_S_reserved_memory_S_memory_20070000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/mbox@41012000
 *
 * Node identifier: DT_N_S_soc_S_mbox_41012000
 *
 * Binding (compatible = nordic,mbox-nrf-ipc):
 *   $ZEPHYR_BASE/dts/bindings/mbox/nordic,mbox-nrf-ipc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mbox_41012000_PATH "/soc/mbox@41012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mbox_41012000_FULL_NAME "mbox@41012000"
#define DT_N_S_soc_S_mbox_41012000_FULL_NAME_UNQUOTED mbox@41012000
#define DT_N_S_soc_S_mbox_41012000_FULL_NAME_TOKEN mbox_41012000
#define DT_N_S_soc_S_mbox_41012000_FULL_NAME_UPPER_TOKEN MBOX_41012000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mbox_41012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mbox_41012000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mbox_41012000_NODELABEL_NUM 2
#define DT_N_S_soc_S_mbox_41012000_FOREACH_NODELABEL(fn) fn(mbox) fn(ipc)
#define DT_N_S_soc_S_mbox_41012000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mbox, __VA_ARGS__) fn(ipc, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_41012000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mbox_41012000_CHILD_NUM 0
#define DT_N_S_soc_S_mbox_41012000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_41012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_mbox_41012000_HASH 5vRWVwQwVcaEz8OK1tDK7faMdf0GCnAhFnNT0LMw46o

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mbox_41012000_ORD 27
#define DT_N_S_soc_S_mbox_41012000_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mbox_41012000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mbox_41012000_SUPPORTS_ORDS \
	28, /* /ipc/ipc0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mbox_41012000_EXISTS 1
#define DT_N_INST_0_nordic_mbox_nrf_ipc DT_N_S_soc_S_mbox_41012000
#define DT_N_INST_0_nordic_nrf_ipc      DT_N_S_soc_S_mbox_41012000
#define DT_N_NODELABEL_mbox             DT_N_S_soc_S_mbox_41012000
#define DT_N_NODELABEL_ipc              DT_N_S_soc_S_mbox_41012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mbox_41012000_REG_NUM 1
#define DT_N_S_soc_S_mbox_41012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_REG_IDX_0_VAL_ADDRESS 1090592768 /* 0x41012000 */
#define DT_N_S_soc_S_mbox_41012000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mbox_41012000_RANGES_NUM 0
#define DT_N_S_soc_S_mbox_41012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mbox_41012000_IRQ_NUM 1
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_mbox_41012000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_MATCHES_nordic_mbox_nrf_ipc 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_mbox_41012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_MODEL_IDX_0 "mbox-nrf-ipc"
#define DT_N_S_soc_S_mbox_41012000_COMPAT_MATCHES_nordic_nrf_ipc 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_VENDOR_IDX_1 "Nordic Semiconductor"
#define DT_N_S_soc_S_mbox_41012000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_COMPAT_MODEL_IDX_1 "nrf-ipc"
#define DT_N_S_soc_S_mbox_41012000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mbox_41012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mbox_41012000_P_tx_mask 65535
#define DT_N_S_soc_S_mbox_41012000_P_tx_mask_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_rx_mask 65535
#define DT_N_S_soc_S_mbox_41012000_P_rx_mask_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_interrupts {18 /* 0x12 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_mbox_41012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_mbox_41012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_mbox_41012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_status "okay"
#define DT_N_S_soc_S_mbox_41012000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_mbox_41012000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_mbox_41012000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_mbox_41012000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_mbox_41012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_mbox_41012000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_41012000, status, 0)
#define DT_N_S_soc_S_mbox_41012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_41012000, status, 0)
#define DT_N_S_soc_S_mbox_41012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_41012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_41012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_41012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_41012000_P_status_LEN 1
#define DT_N_S_soc_S_mbox_41012000_P_status_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_compatible {"nordic,mbox-nrf-ipc", "nordic,nrf-ipc"}
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_0 "nordic,mbox-nrf-ipc"
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_0_STRING_UNQUOTED nordic,mbox-nrf-ipc
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_0_STRING_TOKEN nordic_mbox_nrf_ipc
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_MBOX_NRF_IPC
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_1 "nordic,nrf-ipc"
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_1_STRING_UNQUOTED nordic,nrf-ipc
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_1_STRING_TOKEN nordic_nrf_ipc
#define DT_N_S_soc_S_mbox_41012000_P_compatible_IDX_1_STRING_UPPER_TOKEN NORDIC_NRF_IPC
#define DT_N_S_soc_S_mbox_41012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_41012000, compatible, 0) \
	fn(DT_N_S_soc_S_mbox_41012000, compatible, 1)
#define DT_N_S_soc_S_mbox_41012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_41012000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mbox_41012000, compatible, 1)
#define DT_N_S_soc_S_mbox_41012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_41012000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_mbox_41012000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_41012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_41012000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_mbox_41012000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_41012000_P_compatible_LEN 2
#define DT_N_S_soc_S_mbox_41012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_reg {1090592768 /* 0x41012000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mbox_41012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_reg_IDX_0 1090592768
#define DT_N_S_soc_S_mbox_41012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mbox_41012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mbox_41012000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_wakeup_source 0
#define DT_N_S_soc_S_mbox_41012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mbox_41012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mbox_41012000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /ipc/ipc0
 *
 * Node identifier: DT_N_S_ipc_S_ipc0
 *
 * Binding (compatible = zephyr,ipc-openamp-static-vrings):
 *   $ZEPHYR_BASE/dts/bindings/ipc/zephyr,ipc-openamp-static-vrings.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_ipc_S_ipc0_PATH "/ipc/ipc0"

/* Node's name with unit-address: */
#define DT_N_S_ipc_S_ipc0_FULL_NAME "ipc0"
#define DT_N_S_ipc_S_ipc0_FULL_NAME_UNQUOTED ipc0
#define DT_N_S_ipc_S_ipc0_FULL_NAME_TOKEN ipc0
#define DT_N_S_ipc_S_ipc0_FULL_NAME_UPPER_TOKEN IPC0

/* Node parent (/ipc) identifier: */
#define DT_N_S_ipc_S_ipc0_PARENT DT_N_S_ipc

/* Node's index in its parent's list of children: */
#define DT_N_S_ipc_S_ipc0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_ipc_S_ipc0_NODELABEL_NUM 1
#define DT_N_S_ipc_S_ipc0_FOREACH_NODELABEL(fn) fn(ipc0)
#define DT_N_S_ipc_S_ipc0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipc0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_FOREACH_ANCESTOR(fn) fn(DT_N_S_ipc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_ipc_S_ipc0_CHILD_NUM 0
#define DT_N_S_ipc_S_ipc0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD(fn) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_ipc_S_ipc0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_ipc_S_ipc0_HASH QlBJDaabDPeS8bVhETY43OktJEa8B8qTlCS5_QQQ_Tc

/* Node's dependency ordinal: */
#define DT_N_S_ipc_S_ipc0_ORD 28
#define DT_N_S_ipc_S_ipc0_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_ipc_S_ipc0_REQUIRES_ORDS \
	24, /* /ipc */ \
	26, /* /reserved-memory/memory@20070000 */ \
	27, /* /soc/mbox@41012000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_ipc_S_ipc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_ipc_S_ipc0_EXISTS 1
#define DT_N_INST_0_zephyr_ipc_openamp_static_vrings DT_N_S_ipc_S_ipc0
#define DT_N_NODELABEL_ipc0                          DT_N_S_ipc_S_ipc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_ipc_S_ipc0_REG_NUM 0
#define DT_N_S_ipc_S_ipc0_RANGES_NUM 0
#define DT_N_S_ipc_S_ipc0_FOREACH_RANGE(fn) 
#define DT_N_S_ipc_S_ipc0_IRQ_NUM 0
#define DT_N_S_ipc_S_ipc0_IRQ_LEVEL 0
#define DT_N_S_ipc_S_ipc0_COMPAT_MATCHES_zephyr_ipc_openamp_static_vrings 1
#define DT_N_S_ipc_S_ipc0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_ipc_S_ipc0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_COMPAT_MODEL_IDX_0 "ipc-openamp-static-vrings"
#define DT_N_S_ipc_S_ipc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_ipc_S_ipc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_ipc_S_ipc0_P_role "remote"
#define DT_N_S_ipc_S_ipc0_P_role_STRING_UNQUOTED remote
#define DT_N_S_ipc_S_ipc0_P_role_STRING_TOKEN remote
#define DT_N_S_ipc_S_ipc0_P_role_STRING_UPPER_TOKEN REMOTE
#define DT_N_S_ipc_S_ipc0_P_role_IDX_0 "remote"
#define DT_N_S_ipc_S_ipc0_P_role_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_role_IDX_0_ENUM_IDX 1
#define DT_N_S_ipc_S_ipc0_P_role_IDX_0_ENUM_VAL_remote_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_role_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ipc_S_ipc0, role, 0)
#define DT_N_S_ipc_S_ipc0_P_role_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0, role, 0)
#define DT_N_S_ipc_S_ipc0_P_role_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, role, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_role_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, role, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_role_LEN 1
#define DT_N_S_ipc_S_ipc0_P_role_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_memory_region DT_N_S_reserved_memory_S_memory_20070000
#define DT_N_S_ipc_S_ipc0_P_memory_region_IDX_0 DT_N_S_reserved_memory_S_memory_20070000
#define DT_N_S_ipc_S_ipc0_P_memory_region_IDX_0_PH DT_N_S_reserved_memory_S_memory_20070000
#define DT_N_S_ipc_S_ipc0_P_memory_region_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ipc_S_ipc0, memory_region, 0)
#define DT_N_S_ipc_S_ipc0_P_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0, memory_region, 0)
#define DT_N_S_ipc_S_ipc0_P_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, memory_region, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, memory_region, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_memory_region_LEN 1
#define DT_N_S_ipc_S_ipc0_P_memory_region_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_0_PH DT_N_S_soc_S_mbox_41012000
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_0_VAL_channel 0
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_0_NAME "rx"
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_rx_PH DT_N_S_soc_S_mbox_41012000
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_rx_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_rx_VAL_channel DT_N_S_ipc_S_ipc0_P_mboxes_IDX_0_VAL_channel
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_1_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_1_PH DT_N_S_soc_S_mbox_41012000
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_1_VAL_channel 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_IDX_1_NAME "tx"
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_tx_PH DT_N_S_soc_S_mbox_41012000
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_tx_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_tx_VAL_channel DT_N_S_ipc_S_ipc0_P_mboxes_IDX_1_VAL_channel
#define DT_N_S_ipc_S_ipc0_P_mboxes_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mboxes_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ipc_S_ipc0, mboxes, 0) \
	fn(DT_N_S_ipc_S_ipc0, mboxes, 1)
#define DT_N_S_ipc_S_ipc0_P_mboxes_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0, mboxes, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_ipc_S_ipc0, mboxes, 1)
#define DT_N_S_ipc_S_ipc0_P_mboxes_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, mboxes, 0, __VA_ARGS__) \
	fn(DT_N_S_ipc_S_ipc0, mboxes, 1, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_mboxes_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, mboxes, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_ipc_S_ipc0, mboxes, 1, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_mboxes_LEN 2
#define DT_N_S_ipc_S_ipc0_P_mboxes_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mbox_names {"rx", "tx"}
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_0 "rx"
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_1_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_1 "tx"
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_ipc_S_ipc0_P_mbox_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_ipc_S_ipc0_P_mbox_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ipc_S_ipc0, mbox_names, 0) \
	fn(DT_N_S_ipc_S_ipc0, mbox_names, 1)
#define DT_N_S_ipc_S_ipc0_P_mbox_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0, mbox_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_ipc_S_ipc0, mbox_names, 1)
#define DT_N_S_ipc_S_ipc0_P_mbox_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, mbox_names, 0, __VA_ARGS__) \
	fn(DT_N_S_ipc_S_ipc0, mbox_names, 1, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_mbox_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, mbox_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_ipc_S_ipc0, mbox_names, 1, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_mbox_names_LEN 2
#define DT_N_S_ipc_S_ipc0_P_mbox_names_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_status "okay"
#define DT_N_S_ipc_S_ipc0_P_status_STRING_UNQUOTED okay
#define DT_N_S_ipc_S_ipc0_P_status_STRING_TOKEN okay
#define DT_N_S_ipc_S_ipc0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_ipc_S_ipc0_P_status_IDX_0 "okay"
#define DT_N_S_ipc_S_ipc0_P_status_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_ipc_S_ipc0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ipc_S_ipc0, status, 0)
#define DT_N_S_ipc_S_ipc0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0, status, 0)
#define DT_N_S_ipc_S_ipc0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, status, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, status, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_status_LEN 1
#define DT_N_S_ipc_S_ipc0_P_status_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_compatible {"zephyr,ipc-openamp-static-vrings"}
#define DT_N_S_ipc_S_ipc0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_compatible_IDX_0 "zephyr,ipc-openamp-static-vrings"
#define DT_N_S_ipc_S_ipc0_P_compatible_IDX_0_STRING_UNQUOTED zephyr,ipc-openamp-static-vrings
#define DT_N_S_ipc_S_ipc0_P_compatible_IDX_0_STRING_TOKEN zephyr_ipc_openamp_static_vrings
#define DT_N_S_ipc_S_ipc0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_IPC_OPENAMP_STATIC_VRINGS
#define DT_N_S_ipc_S_ipc0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_ipc_S_ipc0, compatible, 0)
#define DT_N_S_ipc_S_ipc0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_ipc_S_ipc0, compatible, 0)
#define DT_N_S_ipc_S_ipc0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_ipc_S_ipc0, compatible, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_ipc_S_ipc0, compatible, 0, __VA_ARGS__)
#define DT_N_S_ipc_S_ipc0_P_compatible_LEN 1
#define DT_N_S_ipc_S_ipc0_P_compatible_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_zephyr_deferred_init 0
#define DT_N_S_ipc_S_ipc0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_wakeup_source 0
#define DT_N_S_ipc_S_ipc0_P_wakeup_source_EXISTS 1
#define DT_N_S_ipc_S_ipc0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_ipc_S_ipc0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 3
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_3, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 29
#define DT_N_S_leds_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/gpio@418c0800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	30, /* /leds/led_1 */ \
	31, /* /leds/led_2 */ \
	32, /* /leds/led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"
#define DT_N_S_leds_S_led_1_FULL_NAME_UNQUOTED led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_TOKEN led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_UPPER_TOKEN LED_1

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(red_led)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(red_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_1_HASH iXGpSU4KdWdLNkNXyuDlz5Q9aavHPvjTPItAJ_Q0T5c

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 30
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	9, /* /soc/gpio@418c0800 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0        DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_red_led DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 8
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 32
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "RGB red LED"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED RGB red LED
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN RGB_red_LED
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN RGB_RED_LED
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "RGB red LED"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"
#define DT_N_S_leds_S_led_2_FULL_NAME_UNQUOTED led_2
#define DT_N_S_leds_S_led_2_FULL_NAME_TOKEN led_2
#define DT_N_S_leds_S_led_2_FULL_NAME_UPPER_TOKEN LED_2

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_2_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL(fn) fn(green_led)
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(green_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_CHILD_NUM 0
#define DT_N_S_leds_S_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_2_HASH KsPGInVliEI1PRs0DmyETNF7dyG4frBo_Z_DeHCKQaA

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 31
#define DT_N_S_leds_S_led_2_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	9, /* /soc/gpio@418c0800 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led1          DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_green_led DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 32
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "RGB green LED"
#define DT_N_S_leds_S_led_2_P_label_STRING_UNQUOTED RGB green LED
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN RGB_green_LED
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN RGB_GREEN_LED
#define DT_N_S_leds_S_led_2_P_label_IDX_0 "RGB green LED"
#define DT_N_S_leds_S_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_LEN 1
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"
#define DT_N_S_leds_S_led_3_FULL_NAME_UNQUOTED led_3
#define DT_N_S_leds_S_led_3_FULL_NAME_TOKEN led_3
#define DT_N_S_leds_S_led_3_FULL_NAME_UPPER_TOKEN LED_3

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_3_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL(fn) fn(blue_led)
#define DT_N_S_leds_S_led_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(blue_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_3_CHILD_NUM 0
#define DT_N_S_leds_S_led_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_3_HASH pLTfITNsOL3nhJnRmoaWMqapL5v7uTq7eUydfMIb7KA

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 32
#define DT_N_S_leds_S_led_3_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	9, /* /soc/gpio@418c0800 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led2         DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_418c0800
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 32
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "RGB blue LED"
#define DT_N_S_leds_S_led_3_P_label_STRING_UNQUOTED RGB blue LED
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN RGB_blue_LED
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN RGB_BLUE_LED
#define DT_N_S_leds_S_led_3_P_label_IDX_0 "RGB blue LED"
#define DT_N_S_leds_S_led_3_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_3, label, 0)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_LEN 1
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_PATH "/pin-controller/spi0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spi0_default) identifier: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_PARENT DT_N_S_pin_controller_S_spi0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_HASH gmPs7uwwmOQGSyk8_3No_eqLrOjjz8XaGzqn4h8ix3w

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_ORD 33
#define DT_N_S_pin_controller_S_spi0_default_S_group1_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_REQUIRES_ORDS \
	11, /* /pin-controller/spi0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels {67108893 /* 0x400001d */, 100663323 /* 0x600001b */, 83886108 /* 0x500001c */}
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_IDX_0 67108893
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_IDX_1 100663323
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_IDX_2 83886108
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_LEN 3
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_PATH "/pin-controller/spi0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spi0_sleep) identifier: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_spi0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_spi0_sleep) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_HASH M4GLkcdQ6USt9a1EgznU6vNaRfDimwuh1rWRtC8ifZU

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_ORD 34
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_REQUIRES_ORDS \
	12, /* /pin-controller/spi0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels {67108893 /* 0x400001d */, 100663323 /* 0x600001b */, 83886108 /* 0x500001c */}
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_IDX_0 67108893
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_IDX_1 100663323
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_IDX_2 83886108
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 2)
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, psels, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_LEN 3
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_spi0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UNQUOTED uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_TOKEN uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UPPER_TOKEN UART0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL(fn) fn(uart0_default)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_default, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_HASH hpPoQq5QYEcDym1g2JBVllTKxA90m_i7KnAuJScDL4o

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 35
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	10, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	36, /* /pin-controller/uart0_default/group1 */ \
	60, /* /soc/uart@41013000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_HASH mw9A94JnX0K15LdzaqSiBYHstgeiBk__IFPWTJ90zX0

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 36
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	35, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels {12 /* 0xc */, 16777227 /* 0x100000b */, 33554442 /* 0x200000a */, 50331657 /* 0x3000009 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_0 12
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_1 16777227
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_2 33554442
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_IDX_3 50331657
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 2) \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_default_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_LEN 4
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_sleep
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_PATH "/pin-controller/uart0_sleep"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME "uart0_sleep"
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME_UNQUOTED uart0_sleep
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME_TOKEN uart0_sleep
#define DT_N_S_pin_controller_S_uart0_sleep_FULL_NAME_UPPER_TOKEN UART0_SLEEP

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_sleep_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_NODELABEL(fn) fn(uart0_sleep)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_sleep, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_CHILD_NUM 1
#define DT_N_S_pin_controller_S_uart0_sleep_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_sleep_HASH wkS6Z3dvWm_7v8eMcSJA0qHxZrSqKKxrIBME_38dOZM

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_ORD 37
#define DT_N_S_pin_controller_S_uart0_sleep_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_REQUIRES_ORDS \
	10, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_SUPPORTS_ORDS \
	38, /* /pin-controller/uart0_sleep/group1 */ \
	60, /* /soc/uart@41013000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_EXISTS 1
#define DT_N_NODELABEL_uart0_sleep DT_N_S_pin_controller_S_uart0_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_sleep/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_sleep_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PATH "/pin-controller/uart0_sleep/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart0_sleep) identifier: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PARENT DT_N_S_pin_controller_S_uart0_sleep

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_HASH u5GIav0pofWTMcjcyDjzOAG1KufBfsy69jVFQUYwLn0

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD 38
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REQUIRES_ORDS \
	37, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels {12 /* 0xc */, 16777227 /* 0x100000b */, 33554442 /* 0x200000a */, 50331657 /* 0x3000009 */}
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_0 12
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_1 16777227
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_2 33554442
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_IDX_3 50331657
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 2) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 3)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, psels, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_LEN 4
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_psels_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_drive_mode_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_nordic_invert_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable 1
#define DT_N_S_pin_controller_S_uart0_sleep_S_group1_P_low_power_enable_EXISTS 1

/*
 * Devicetree node: /soc/acl@41080000
 *
 * Node identifier: DT_N_S_soc_S_acl_41080000
 *
 * Binding (compatible = nordic,nrf-acl):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-acl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_acl_41080000_PATH "/soc/acl@41080000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_acl_41080000_FULL_NAME "acl@41080000"
#define DT_N_S_soc_S_acl_41080000_FULL_NAME_UNQUOTED acl@41080000
#define DT_N_S_soc_S_acl_41080000_FULL_NAME_TOKEN acl_41080000
#define DT_N_S_soc_S_acl_41080000_FULL_NAME_UPPER_TOKEN ACL_41080000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_acl_41080000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_acl_41080000_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_acl_41080000_NODELABEL_NUM 1
#define DT_N_S_soc_S_acl_41080000_FOREACH_NODELABEL(fn) fn(acl)
#define DT_N_S_soc_S_acl_41080000_FOREACH_NODELABEL_VARGS(fn, ...) fn(acl, __VA_ARGS__)
#define DT_N_S_soc_S_acl_41080000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_acl_41080000_CHILD_NUM 0
#define DT_N_S_soc_S_acl_41080000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_acl_41080000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_acl_41080000_HASH oPv2cR_4UkceiHmJ4VBB8_F8szGtCELUNFQVZxfS4DQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_acl_41080000_ORD 39
#define DT_N_S_soc_S_acl_41080000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_acl_41080000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_acl_41080000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_acl_41080000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_acl DT_N_S_soc_S_acl_41080000
#define DT_N_NODELABEL_acl         DT_N_S_soc_S_acl_41080000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_acl_41080000_REG_NUM 1
#define DT_N_S_soc_S_acl_41080000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_REG_IDX_0_VAL_ADDRESS 1091043328 /* 0x41080000 */
#define DT_N_S_soc_S_acl_41080000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_acl_41080000_RANGES_NUM 0
#define DT_N_S_soc_S_acl_41080000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_acl_41080000_IRQ_NUM 0
#define DT_N_S_soc_S_acl_41080000_IRQ_LEVEL 0
#define DT_N_S_soc_S_acl_41080000_COMPAT_MATCHES_nordic_nrf_acl 1
#define DT_N_S_soc_S_acl_41080000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_acl_41080000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_COMPAT_MODEL_IDX_0 "nrf-acl"
#define DT_N_S_soc_S_acl_41080000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_acl_41080000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_acl_41080000_P_reg {1091043328 /* 0x41080000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_acl_41080000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_reg_IDX_0 1091043328
#define DT_N_S_soc_S_acl_41080000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_acl_41080000_P_reg_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_status "okay"
#define DT_N_S_soc_S_acl_41080000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_acl_41080000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_acl_41080000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_acl_41080000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_acl_41080000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_acl_41080000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_41080000, status, 0)
#define DT_N_S_soc_S_acl_41080000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_41080000, status, 0)
#define DT_N_S_soc_S_acl_41080000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_41080000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_41080000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_41080000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_41080000_P_status_LEN 1
#define DT_N_S_soc_S_acl_41080000_P_status_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_compatible {"nordic,nrf-acl"}
#define DT_N_S_soc_S_acl_41080000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_compatible_IDX_0 "nordic,nrf-acl"
#define DT_N_S_soc_S_acl_41080000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-acl
#define DT_N_S_soc_S_acl_41080000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_acl
#define DT_N_S_soc_S_acl_41080000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ACL
#define DT_N_S_soc_S_acl_41080000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_acl_41080000, compatible, 0)
#define DT_N_S_soc_S_acl_41080000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_acl_41080000, compatible, 0)
#define DT_N_S_soc_S_acl_41080000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_acl_41080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_41080000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_acl_41080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_acl_41080000_P_compatible_LEN 1
#define DT_N_S_soc_S_acl_41080000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_acl_41080000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_wakeup_source 0
#define DT_N_S_soc_S_acl_41080000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_acl_41080000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_acl_41080000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ccm@4100e000
 *
 * Node identifier: DT_N_S_soc_S_ccm_4100e000
 *
 * Binding (compatible = nordic,nrf-ccm):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ccm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ccm_4100e000_PATH "/soc/ccm@4100e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ccm_4100e000_FULL_NAME "ccm@4100e000"
#define DT_N_S_soc_S_ccm_4100e000_FULL_NAME_UNQUOTED ccm@4100e000
#define DT_N_S_soc_S_ccm_4100e000_FULL_NAME_TOKEN ccm_4100e000
#define DT_N_S_soc_S_ccm_4100e000_FULL_NAME_UPPER_TOKEN CCM_4100E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ccm_4100e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ccm_4100e000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ccm_4100e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_NODELABEL(fn) fn(ccm)
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ccm, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ccm_4100e000_CHILD_NUM 0
#define DT_N_S_soc_S_ccm_4100e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ccm_4100e000_HASH 7QQtHDVlkcBk8AX_mqJfaob2syvv85P_s7kaFNdtJ6E

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ccm_4100e000_ORD 40
#define DT_N_S_soc_S_ccm_4100e000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ccm_4100e000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ccm_4100e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ccm_4100e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ccm DT_N_S_soc_S_ccm_4100e000
#define DT_N_NODELABEL_ccm         DT_N_S_soc_S_ccm_4100e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ccm_4100e000_REG_NUM 1
#define DT_N_S_soc_S_ccm_4100e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_REG_IDX_0_VAL_ADDRESS 1090576384 /* 0x4100e000 */
#define DT_N_S_soc_S_ccm_4100e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ccm_4100e000_RANGES_NUM 0
#define DT_N_S_soc_S_ccm_4100e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ccm_4100e000_IRQ_NUM 1
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ccm_4100e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_ccm_4100e000_COMPAT_MATCHES_nordic_nrf_ccm 1
#define DT_N_S_soc_S_ccm_4100e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ccm_4100e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_COMPAT_MODEL_IDX_0 "nrf-ccm"
#define DT_N_S_soc_S_ccm_4100e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ccm_4100e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ccm_4100e000_P_reg {1090576384 /* 0x4100e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ccm_4100e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_reg_IDX_0 1090576384
#define DT_N_S_soc_S_ccm_4100e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ccm_4100e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ccm_4100e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_ccm_4100e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ccm_4100e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_length_field_length_8_bits 1
#define DT_N_S_soc_S_ccm_4100e000_P_length_field_length_8_bits_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_headermask_supported 1
#define DT_N_S_soc_S_ccm_4100e000_P_headermask_supported_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_status "okay"
#define DT_N_S_soc_S_ccm_4100e000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ccm_4100e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ccm_4100e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ccm_4100e000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ccm_4100e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ccm_4100e000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4100e000, status, 0)
#define DT_N_S_soc_S_ccm_4100e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4100e000, status, 0)
#define DT_N_S_soc_S_ccm_4100e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4100e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4100e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4100e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4100e000_P_status_LEN 1
#define DT_N_S_soc_S_ccm_4100e000_P_status_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_compatible {"nordic,nrf-ccm"}
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_IDX_0 "nordic,nrf-ccm"
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ccm
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ccm
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CCM
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ccm_4100e000, compatible, 0)
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ccm_4100e000, compatible, 0)
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ccm_4100e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ccm_4100e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_LEN 1
#define DT_N_S_soc_S_ccm_4100e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ccm_4100e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_wakeup_source 0
#define DT_N_S_soc_S_ccm_4100e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ccm_4100e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ccm_4100e000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock@41005000
 *
 * Node identifier: DT_N_S_soc_S_clock_41005000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_41005000_PATH "/soc/clock@41005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_41005000_FULL_NAME "clock@41005000"
#define DT_N_S_soc_S_clock_41005000_FULL_NAME_UNQUOTED clock@41005000
#define DT_N_S_soc_S_clock_41005000_FULL_NAME_TOKEN clock_41005000
#define DT_N_S_soc_S_clock_41005000_FULL_NAME_UPPER_TOKEN CLOCK_41005000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_41005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_41005000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_clock_41005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_clock_41005000_FOREACH_NODELABEL(fn) fn(clock)
#define DT_N_S_soc_S_clock_41005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(clock, __VA_ARGS__)
#define DT_N_S_soc_S_clock_41005000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_41005000_CHILD_NUM 0
#define DT_N_S_soc_S_clock_41005000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_41005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_clock_41005000_HASH AzfjWI6fieQanSrDMh9_wxLrtzOM3lvtncRbVo7Kt_k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_41005000_ORD 41
#define DT_N_S_soc_S_clock_41005000_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_41005000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_41005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_41005000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_clock_41005000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_clock_41005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_41005000_REG_NUM 1
#define DT_N_S_soc_S_clock_41005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_REG_IDX_0_VAL_ADDRESS 1090539520 /* 0x41005000 */
#define DT_N_S_soc_S_clock_41005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_clock_41005000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_41005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_41005000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_clock_41005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_clock_41005000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_clock_41005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_clock_41005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_COMPAT_MODEL_IDX_0 "nrf-clock"
#define DT_N_S_soc_S_clock_41005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_41005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_41005000_P_reg {1090539520 /* 0x41005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_clock_41005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_reg_IDX_0 1090539520
#define DT_N_S_soc_S_clock_41005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_clock_41005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_clock_41005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_clock_41005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_clock_41005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_status "okay"
#define DT_N_S_soc_S_clock_41005000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_41005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_41005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_41005000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_41005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_clock_41005000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_41005000, status, 0)
#define DT_N_S_soc_S_clock_41005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_41005000, status, 0)
#define DT_N_S_soc_S_clock_41005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_41005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_41005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_41005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_41005000_P_status_LEN 1
#define DT_N_S_soc_S_clock_41005000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_clock_41005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_clock_41005000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-clock
#define DT_N_S_soc_S_clock_41005000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_clock
#define DT_N_S_soc_S_clock_41005000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_CLOCK
#define DT_N_S_soc_S_clock_41005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_41005000, compatible, 0)
#define DT_N_S_soc_S_clock_41005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_41005000, compatible, 0)
#define DT_N_S_soc_S_clock_41005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_41005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_41005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_41005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_41005000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_41005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_clock_41005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_41005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_41005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_41005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dppic@4100f000
 *
 * Node identifier: DT_N_S_soc_S_dppic_4100f000
 *
 * Binding (compatible = nordic,nrf-dppic):
 *   $ZEPHYR_BASE/dts/bindings/misc/nordic,nrf-dppic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dppic_4100f000_PATH "/soc/dppic@4100f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dppic_4100f000_FULL_NAME "dppic@4100f000"
#define DT_N_S_soc_S_dppic_4100f000_FULL_NAME_UNQUOTED dppic@4100f000
#define DT_N_S_soc_S_dppic_4100f000_FULL_NAME_TOKEN dppic_4100f000
#define DT_N_S_soc_S_dppic_4100f000_FULL_NAME_UPPER_TOKEN DPPIC_4100F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dppic_4100f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dppic_4100f000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dppic_4100f000_NODELABEL_NUM 2
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_NODELABEL(fn) fn(dppic0) fn(dppic)
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dppic0, __VA_ARGS__) fn(dppic, __VA_ARGS__)
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dppic_4100f000_CHILD_NUM 0
#define DT_N_S_soc_S_dppic_4100f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_dppic_4100f000_HASH rBMax02wSrtV3TaRHMNO4DSohLKsH4ujeYRPyszuWoM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dppic_4100f000_ORD 42
#define DT_N_S_soc_S_dppic_4100f000_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dppic_4100f000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dppic_4100f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dppic_4100f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_dppic DT_N_S_soc_S_dppic_4100f000
#define DT_N_NODELABEL_dppic0        DT_N_S_soc_S_dppic_4100f000
#define DT_N_NODELABEL_dppic         DT_N_S_soc_S_dppic_4100f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dppic_4100f000_REG_NUM 1
#define DT_N_S_soc_S_dppic_4100f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_REG_IDX_0_VAL_ADDRESS 1090580480 /* 0x4100f000 */
#define DT_N_S_soc_S_dppic_4100f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_dppic_4100f000_RANGES_NUM 0
#define DT_N_S_soc_S_dppic_4100f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dppic_4100f000_IRQ_NUM 0
#define DT_N_S_soc_S_dppic_4100f000_IRQ_LEVEL 0
#define DT_N_S_soc_S_dppic_4100f000_COMPAT_MATCHES_nordic_nrf_dppic 1
#define DT_N_S_soc_S_dppic_4100f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_dppic_4100f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_COMPAT_MODEL_IDX_0 "nrf-dppic"
#define DT_N_S_soc_S_dppic_4100f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dppic_4100f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dppic_4100f000_P_reg {1090580480 /* 0x4100f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_dppic_4100f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_reg_IDX_0 1090580480
#define DT_N_S_soc_S_dppic_4100f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_dppic_4100f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_status "okay"
#define DT_N_S_soc_S_dppic_4100f000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dppic_4100f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dppic_4100f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dppic_4100f000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dppic_4100f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dppic_4100f000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dppic_4100f000, status, 0)
#define DT_N_S_soc_S_dppic_4100f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dppic_4100f000, status, 0)
#define DT_N_S_soc_S_dppic_4100f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dppic_4100f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dppic_4100f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dppic_4100f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dppic_4100f000_P_status_LEN 1
#define DT_N_S_soc_S_dppic_4100f000_P_status_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_compatible {"nordic,nrf-dppic"}
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_IDX_0 "nordic,nrf-dppic"
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-dppic
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_dppic
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_DPPIC
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dppic_4100f000, compatible, 0)
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dppic_4100f000, compatible, 0)
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dppic_4100f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dppic_4100f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_LEN 1
#define DT_N_S_soc_S_dppic_4100f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dppic_4100f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_wakeup_source 0
#define DT_N_S_soc_S_dppic_4100f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dppic_4100f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dppic_4100f000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ecb@4100d000
 *
 * Node identifier: DT_N_S_soc_S_ecb_4100d000
 *
 * Binding (compatible = nordic,nrf-ecb):
 *   $ZEPHYR_BASE/dts/bindings/crypto/nordic,nrf-ecb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ecb_4100d000_PATH "/soc/ecb@4100d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ecb_4100d000_FULL_NAME "ecb@4100d000"
#define DT_N_S_soc_S_ecb_4100d000_FULL_NAME_UNQUOTED ecb@4100d000
#define DT_N_S_soc_S_ecb_4100d000_FULL_NAME_TOKEN ecb_4100d000
#define DT_N_S_soc_S_ecb_4100d000_FULL_NAME_UPPER_TOKEN ECB_4100D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ecb_4100d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ecb_4100d000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ecb_4100d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_NODELABEL(fn) fn(ecb)
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ecb, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ecb_4100d000_CHILD_NUM 0
#define DT_N_S_soc_S_ecb_4100d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ecb_4100d000_HASH V9WUotYCIXwfqcnLkx9jje_R2Umm86rirAAe7YgkJ4I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ecb_4100d000_ORD 43
#define DT_N_S_soc_S_ecb_4100d000_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ecb_4100d000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ecb_4100d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ecb_4100d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ecb DT_N_S_soc_S_ecb_4100d000
#define DT_N_NODELABEL_ecb         DT_N_S_soc_S_ecb_4100d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ecb_4100d000_REG_NUM 1
#define DT_N_S_soc_S_ecb_4100d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_REG_IDX_0_VAL_ADDRESS 1090572288 /* 0x4100d000 */
#define DT_N_S_soc_S_ecb_4100d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ecb_4100d000_RANGES_NUM 0
#define DT_N_S_soc_S_ecb_4100d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ecb_4100d000_IRQ_NUM 1
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_ecb_4100d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_ecb_4100d000_COMPAT_MATCHES_nordic_nrf_ecb 1
#define DT_N_S_soc_S_ecb_4100d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ecb_4100d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_COMPAT_MODEL_IDX_0 "nrf-ecb"
#define DT_N_S_soc_S_ecb_4100d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ecb_4100d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ecb_4100d000_P_reg {1090572288 /* 0x4100d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ecb_4100d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_reg_IDX_0 1090572288
#define DT_N_S_soc_S_ecb_4100d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ecb_4100d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_interrupts {13 /* 0xd */, 1 /* 0x1 */}
#define DT_N_S_soc_S_ecb_4100d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_ecb_4100d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_ecb_4100d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_status "okay"
#define DT_N_S_soc_S_ecb_4100d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ecb_4100d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ecb_4100d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ecb_4100d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ecb_4100d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ecb_4100d000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4100d000, status, 0)
#define DT_N_S_soc_S_ecb_4100d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4100d000, status, 0)
#define DT_N_S_soc_S_ecb_4100d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4100d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4100d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4100d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4100d000_P_status_LEN 1
#define DT_N_S_soc_S_ecb_4100d000_P_status_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_compatible {"nordic,nrf-ecb"}
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_IDX_0 "nordic,nrf-ecb"
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ecb
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ecb
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_ECB
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ecb_4100d000, compatible, 0)
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ecb_4100d000, compatible, 0)
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ecb_4100d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ecb_4100d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_LEN 1
#define DT_N_S_soc_S_ecb_4100d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ecb_4100d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_wakeup_source 0
#define DT_N_S_soc_S_ecb_4100d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ecb_4100d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ecb_4100d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/egu@41014000
 *
 * Node identifier: DT_N_S_soc_S_egu_41014000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_egu_41014000_PATH "/soc/egu@41014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_egu_41014000_FULL_NAME "egu@41014000"
#define DT_N_S_soc_S_egu_41014000_FULL_NAME_UNQUOTED egu@41014000
#define DT_N_S_soc_S_egu_41014000_FULL_NAME_TOKEN egu_41014000
#define DT_N_S_soc_S_egu_41014000_FULL_NAME_UPPER_TOKEN EGU_41014000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_egu_41014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_egu_41014000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_egu_41014000_NODELABEL_NUM 1
#define DT_N_S_soc_S_egu_41014000_FOREACH_NODELABEL(fn) fn(egu0)
#define DT_N_S_soc_S_egu_41014000_FOREACH_NODELABEL_VARGS(fn, ...) fn(egu0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_41014000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_egu_41014000_CHILD_NUM 0
#define DT_N_S_soc_S_egu_41014000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_egu_41014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_egu_41014000_HASH j1R_x80hLk6mhrAGTFBXxw4wATKjoMvNLtum6HYQlQ4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_egu_41014000_ORD 44
#define DT_N_S_soc_S_egu_41014000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_egu_41014000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_egu_41014000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_egu_41014000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_egu DT_N_S_soc_S_egu_41014000
#define DT_N_NODELABEL_egu0        DT_N_S_soc_S_egu_41014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_egu_41014000_REG_NUM 1
#define DT_N_S_soc_S_egu_41014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_REG_IDX_0_VAL_ADDRESS 1090600960 /* 0x41014000 */
#define DT_N_S_soc_S_egu_41014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_egu_41014000_RANGES_NUM 0
#define DT_N_S_soc_S_egu_41014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_egu_41014000_IRQ_NUM 1
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_egu_41014000_IRQ_LEVEL 1
#define DT_N_S_soc_S_egu_41014000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_egu_41014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_egu_41014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_COMPAT_MODEL_IDX_0 "nrf-egu"
#define DT_N_S_soc_S_egu_41014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_egu_41014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_egu_41014000_P_reg {1090600960 /* 0x41014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_egu_41014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_reg_IDX_0 1090600960
#define DT_N_S_soc_S_egu_41014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_egu_41014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_egu_41014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_egu_41014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_egu_41014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_status "okay"
#define DT_N_S_soc_S_egu_41014000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_egu_41014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_egu_41014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_egu_41014000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_egu_41014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_egu_41014000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_41014000, status, 0)
#define DT_N_S_soc_S_egu_41014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_41014000, status, 0)
#define DT_N_S_soc_S_egu_41014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_41014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_41014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_41014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_41014000_P_status_LEN 1
#define DT_N_S_soc_S_egu_41014000_P_status_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_egu_41014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_egu_41014000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-egu
#define DT_N_S_soc_S_egu_41014000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_egu
#define DT_N_S_soc_S_egu_41014000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_EGU
#define DT_N_S_soc_S_egu_41014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_egu_41014000, compatible, 0)
#define DT_N_S_soc_S_egu_41014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_egu_41014000, compatible, 0)
#define DT_N_S_soc_S_egu_41014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_egu_41014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_41014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_egu_41014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_egu_41014000_P_compatible_LEN 1
#define DT_N_S_soc_S_egu_41014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_egu_41014000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_wakeup_source 0
#define DT_N_S_soc_S_egu_41014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_egu_41014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_egu_41014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ficr@1ff0000
 *
 * Node identifier: DT_N_S_soc_S_ficr_1ff0000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE/dts/bindings/misc/nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_1ff0000_PATH "/soc/ficr@1ff0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ficr_1ff0000_FULL_NAME "ficr@1ff0000"
#define DT_N_S_soc_S_ficr_1ff0000_FULL_NAME_UNQUOTED ficr@1ff0000
#define DT_N_S_soc_S_ficr_1ff0000_FULL_NAME_TOKEN ficr_1ff0000
#define DT_N_S_soc_S_ficr_1ff0000_FULL_NAME_UPPER_TOKEN FICR_1FF0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_1ff0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ficr_1ff0000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ficr_1ff0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_NODELABEL(fn) fn(ficr)
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ficr, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ficr_1ff0000_CHILD_NUM 0
#define DT_N_S_soc_S_ficr_1ff0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_ficr_1ff0000_HASH 9dMgJUpjZ2YB30rPEGWHYHgLZmvj7gnQuTrCVkqeY2Y

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_1ff0000_ORD 45
#define DT_N_S_soc_S_ficr_1ff0000_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_1ff0000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_1ff0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_1ff0000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_1ff0000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_1ff0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ficr_1ff0000_REG_NUM 1
#define DT_N_S_soc_S_ficr_1ff0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_REG_IDX_0_VAL_ADDRESS 33488896 /* 0x1ff0000 */
#define DT_N_S_soc_S_ficr_1ff0000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_1ff0000_RANGES_NUM 0
#define DT_N_S_soc_S_ficr_1ff0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ficr_1ff0000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_1ff0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_ficr_1ff0000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_1ff0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_ficr_1ff0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_COMPAT_MODEL_IDX_0 "nrf-ficr"
#define DT_N_S_soc_S_ficr_1ff0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ficr_1ff0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_1ff0000_P_reg {33488896 /* 0x1ff0000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_1ff0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_reg_IDX_0 33488896
#define DT_N_S_soc_S_ficr_1ff0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_1ff0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_status "okay"
#define DT_N_S_soc_S_ficr_1ff0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ficr_1ff0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ficr_1ff0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_1ff0000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ficr_1ff0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_1ff0000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_1ff0000, status, 0)
#define DT_N_S_soc_S_ficr_1ff0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_1ff0000, status, 0)
#define DT_N_S_soc_S_ficr_1ff0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_1ff0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_1ff0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_1ff0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_1ff0000_P_status_LEN 1
#define DT_N_S_soc_S_ficr_1ff0000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ficr
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ficr
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_FICR
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_1ff0000, compatible, 0)
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ficr_1ff0000, compatible, 0)
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_1ff0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ficr_1ff0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_1ff0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ficr_1ff0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_wakeup_source 0
#define DT_N_S_soc_S_ficr_1ff0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ficr_1ff0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ficr_1ff0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@41013000
 *
 * Node identifier: DT_N_S_soc_S_i2c_41013000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE/dts/bindings/i2c/nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_41013000_PATH "/soc/i2c@41013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_41013000_FULL_NAME "i2c@41013000"
#define DT_N_S_soc_S_i2c_41013000_FULL_NAME_UNQUOTED i2c@41013000
#define DT_N_S_soc_S_i2c_41013000_FULL_NAME_TOKEN i2c_41013000
#define DT_N_S_soc_S_i2c_41013000_FULL_NAME_UPPER_TOKEN I2C_41013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_41013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_41013000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_41013000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_41013000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_41013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_41013000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_41013000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_41013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_41013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_i2c_41013000_HASH 1n55AUTKA8t5GPlkCRPIRSk_z3vyaWx6cYLOO8GPQ0I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_41013000_ORD 46
#define DT_N_S_soc_S_i2c_41013000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_41013000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_41013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_41013000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twim DT_N_S_soc_S_i2c_41013000
#define DT_N_NODELABEL_i2c0         DT_N_S_soc_S_i2c_41013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_41013000_REG_NUM 1
#define DT_N_S_soc_S_i2c_41013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_REG_IDX_0_VAL_ADDRESS 1090596864 /* 0x41013000 */
#define DT_N_S_soc_S_i2c_41013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_41013000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_41013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_41013000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_41013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_41013000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_i2c_41013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_i2c_41013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_COMPAT_MODEL_IDX_0 "nrf-twim"
#define DT_N_S_soc_S_i2c_41013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_41013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_reg {1090596864 /* 0x41013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_41013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_reg_IDX_0 1090596864
#define DT_N_S_soc_S_i2c_41013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_41013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_interrupts {19 /* 0x13 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_i2c_41013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_i2c_41013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_i2c_41013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_easydma_maxcnt_bits 16
#define DT_N_S_soc_S_i2c_41013000_P_easydma_maxcnt_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_sq_size 4
#define DT_N_S_soc_S_i2c_41013000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_cq_size 4
#define DT_N_S_soc_S_i2c_41013000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_status "disabled"
#define DT_N_S_soc_S_i2c_41013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_41013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_41013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_41013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_41013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_41013000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_41013000, status, 0)
#define DT_N_S_soc_S_i2c_41013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_41013000, status, 0)
#define DT_N_S_soc_S_i2c_41013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_41013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_41013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_41013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_41013000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_41013000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_i2c_41013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_i2c_41013000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-twim
#define DT_N_S_soc_S_i2c_41013000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_twim
#define DT_N_S_soc_S_i2c_41013000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TWIM
#define DT_N_S_soc_S_i2c_41013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_41013000, compatible, 0)
#define DT_N_S_soc_S_i2c_41013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_41013000, compatible, 0)
#define DT_N_S_soc_S_i2c_41013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_41013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_41013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_41013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_41013000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_41013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_41013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_pm_device_runtime_auto 1
#define DT_N_S_soc_S_i2c_41013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_soc_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_20000000_HASH 5mk6hI_a0RgTbSaRk0MwzSvPe_XVqQpqtmpmf4tdmFg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 47
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 524288 /* 0x80000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 524288 /* 0x80000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 524288
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/memory@21000000
 *
 * Node identifier: DT_N_S_soc_S_memory_21000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_21000000_PATH "/soc/memory@21000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_21000000_FULL_NAME "memory@21000000"
#define DT_N_S_soc_S_memory_21000000_FULL_NAME_UNQUOTED memory@21000000
#define DT_N_S_soc_S_memory_21000000_FULL_NAME_TOKEN memory_21000000
#define DT_N_S_soc_S_memory_21000000_FULL_NAME_UPPER_TOKEN MEMORY_21000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_21000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_21000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_21000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_21000000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_soc_S_memory_21000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_21000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_21000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_21000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_21000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_memory_21000000_HASH OU_sZi3YgGIyDRsgKWHnUDKabF1HAACK6fFtH27hl7I

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_21000000_ORD 48
#define DT_N_S_soc_S_memory_21000000_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_21000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_21000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_21000000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_soc_S_memory_21000000
#define DT_N_INST_1_mmio_sram            DT_N_S_soc_S_memory_21000000
#define DT_N_NODELABEL_sram1             DT_N_S_soc_S_memory_21000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_21000000_REG_NUM 1
#define DT_N_S_soc_S_memory_21000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_REG_IDX_0_VAL_ADDRESS 553648128 /* 0x21000000 */
#define DT_N_S_soc_S_memory_21000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_memory_21000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_21000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_21000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_21000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_21000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_21000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_memory_21000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_soc_S_memory_21000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_21000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_21000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region "SRAM1"
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_STRING_UNQUOTED SRAM1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_STRING_TOKEN SRAM1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_STRING_UPPER_TOKEN SRAM1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_IDX_0 "SRAM1"
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_21000000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_21000000, zephyr_memory_region, 0)
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_21000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_21000000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_LEN 1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_21000000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_21000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_21000000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_21000000, compatible, 1)
#define DT_N_S_soc_S_memory_21000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_21000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_21000000, compatible, 1)
#define DT_N_S_soc_S_memory_21000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_21000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_21000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_21000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_21000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_memory_21000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_21000000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_21000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_reg {553648128 /* 0x21000000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_memory_21000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_reg_IDX_0 553648128
#define DT_N_S_soc_S_memory_21000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_memory_21000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_21000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_21000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_21000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_21000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/random@41009000
 *
 * Node identifier: DT_N_S_soc_S_random_41009000
 *
 * Binding (compatible = nordic,nrf-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/nordic,nrf-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_random_41009000_PATH "/soc/random@41009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_random_41009000_FULL_NAME "random@41009000"
#define DT_N_S_soc_S_random_41009000_FULL_NAME_UNQUOTED random@41009000
#define DT_N_S_soc_S_random_41009000_FULL_NAME_TOKEN random_41009000
#define DT_N_S_soc_S_random_41009000_FULL_NAME_UPPER_TOKEN RANDOM_41009000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_random_41009000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_random_41009000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_random_41009000_NODELABEL_NUM 1
#define DT_N_S_soc_S_random_41009000_FOREACH_NODELABEL(fn) fn(rng)
#define DT_N_S_soc_S_random_41009000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rng, __VA_ARGS__)
#define DT_N_S_soc_S_random_41009000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_random_41009000_CHILD_NUM 0
#define DT_N_S_soc_S_random_41009000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_random_41009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_random_41009000_HASH Mz18NIjcNCHnMaA8sR7J8dSnuo78kHLHkxY_vN_grk0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_random_41009000_ORD 49
#define DT_N_S_soc_S_random_41009000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_random_41009000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_random_41009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_random_41009000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rng DT_N_S_soc_S_random_41009000
#define DT_N_NODELABEL_rng         DT_N_S_soc_S_random_41009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_random_41009000_REG_NUM 1
#define DT_N_S_soc_S_random_41009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_REG_IDX_0_VAL_ADDRESS 1090555904 /* 0x41009000 */
#define DT_N_S_soc_S_random_41009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_random_41009000_RANGES_NUM 0
#define DT_N_S_soc_S_random_41009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_random_41009000_IRQ_NUM 1
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_random_41009000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_random_41009000_IRQ_LEVEL 1
#define DT_N_S_soc_S_random_41009000_COMPAT_MATCHES_nordic_nrf_rng 1
#define DT_N_S_soc_S_random_41009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_random_41009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_COMPAT_MODEL_IDX_0 "nrf-rng"
#define DT_N_S_soc_S_random_41009000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_random_41009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_random_41009000_P_reg {1090555904 /* 0x41009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_random_41009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_reg_IDX_0 1090555904
#define DT_N_S_soc_S_random_41009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_random_41009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_random_41009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_random_41009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_random_41009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_status "okay"
#define DT_N_S_soc_S_random_41009000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_random_41009000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_random_41009000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_random_41009000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_random_41009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_random_41009000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_41009000, status, 0)
#define DT_N_S_soc_S_random_41009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_41009000, status, 0)
#define DT_N_S_soc_S_random_41009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_41009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_41009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_41009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_41009000_P_status_LEN 1
#define DT_N_S_soc_S_random_41009000_P_status_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_compatible {"nordic,nrf-rng"}
#define DT_N_S_soc_S_random_41009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_compatible_IDX_0 "nordic,nrf-rng"
#define DT_N_S_soc_S_random_41009000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rng
#define DT_N_S_soc_S_random_41009000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rng
#define DT_N_S_soc_S_random_41009000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RNG
#define DT_N_S_soc_S_random_41009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_random_41009000, compatible, 0)
#define DT_N_S_soc_S_random_41009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_random_41009000, compatible, 0)
#define DT_N_S_soc_S_random_41009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_random_41009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_41009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_random_41009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_random_41009000_P_compatible_LEN 1
#define DT_N_S_soc_S_random_41009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_random_41009000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_wakeup_source 0
#define DT_N_S_soc_S_random_41009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_random_41009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_random_41009000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@41011000
 *
 * Node identifier: DT_N_S_soc_S_rtc_41011000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_41011000_PATH "/soc/rtc@41011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_41011000_FULL_NAME "rtc@41011000"
#define DT_N_S_soc_S_rtc_41011000_FULL_NAME_UNQUOTED rtc@41011000
#define DT_N_S_soc_S_rtc_41011000_FULL_NAME_TOKEN rtc_41011000
#define DT_N_S_soc_S_rtc_41011000_FULL_NAME_UPPER_TOKEN RTC_41011000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_41011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_41011000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_41011000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_41011000_FOREACH_NODELABEL(fn) fn(rtc0)
#define DT_N_S_soc_S_rtc_41011000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41011000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_41011000_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_41011000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_41011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_41011000_HASH QWUi0NVagYiHQifS_ngtmiHOUcEHL__7lIyYjGRlxaE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_41011000_ORD 50
#define DT_N_S_soc_S_rtc_41011000_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_41011000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_41011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_41011000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_rtc_41011000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_rtc_41011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_41011000_REG_NUM 1
#define DT_N_S_soc_S_rtc_41011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_REG_IDX_0_VAL_ADDRESS 1090588672 /* 0x41011000 */
#define DT_N_S_soc_S_rtc_41011000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_41011000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_41011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_41011000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_41011000_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_41011000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_41011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_41011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_41011000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_41011000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_41011000_P_reg {1090588672 /* 0x41011000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_41011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_reg_IDX_0 1090588672
#define DT_N_S_soc_S_rtc_41011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_41011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_cc_num 4
#define DT_N_S_soc_S_rtc_41011000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_41011000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_41011000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_zli 0
#define DT_N_S_soc_S_rtc_41011000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_41011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_rtc_41011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_41011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_status "disabled"
#define DT_N_S_soc_S_rtc_41011000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_41011000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_41011000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_41011000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_41011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_41011000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_41011000, status, 0)
#define DT_N_S_soc_S_rtc_41011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_41011000, status, 0)
#define DT_N_S_soc_S_rtc_41011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_41011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_41011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41011000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_41011000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_41011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_41011000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_41011000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_41011000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_41011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_41011000, compatible, 0)
#define DT_N_S_soc_S_rtc_41011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_41011000, compatible, 0)
#define DT_N_S_soc_S_rtc_41011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_41011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_41011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41011000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_41011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_41011000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_41011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_41011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_41011000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/rtc@41016000
 *
 * Node identifier: DT_N_S_soc_S_rtc_41016000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_41016000_PATH "/soc/rtc@41016000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_41016000_FULL_NAME "rtc@41016000"
#define DT_N_S_soc_S_rtc_41016000_FULL_NAME_UNQUOTED rtc@41016000
#define DT_N_S_soc_S_rtc_41016000_FULL_NAME_TOKEN rtc_41016000
#define DT_N_S_soc_S_rtc_41016000_FULL_NAME_UPPER_TOKEN RTC_41016000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_41016000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_41016000_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_41016000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_41016000_FOREACH_NODELABEL(fn) fn(rtc1)
#define DT_N_S_soc_S_rtc_41016000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41016000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_41016000_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_41016000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_41016000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_rtc_41016000_HASH nQhPHtuLc4fHhQLZ4iuzNEoK1gCWSx22eOJBvsppAP0

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_41016000_ORD 51
#define DT_N_S_soc_S_rtc_41016000_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_41016000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_41016000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_41016000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_rtc_41016000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_rtc_41016000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_41016000_REG_NUM 1
#define DT_N_S_soc_S_rtc_41016000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_REG_IDX_0_VAL_ADDRESS 1090609152 /* 0x41016000 */
#define DT_N_S_soc_S_rtc_41016000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_rtc_41016000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_41016000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_41016000_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_rtc_41016000_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_41016000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_rtc_41016000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_rtc_41016000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_COMPAT_MODEL_IDX_0 "nrf-rtc"
#define DT_N_S_soc_S_rtc_41016000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_41016000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_41016000_P_reg {1090609152 /* 0x41016000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_rtc_41016000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_reg_IDX_0 1090609152
#define DT_N_S_soc_S_rtc_41016000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_rtc_41016000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_cc_num 4
#define DT_N_S_soc_S_rtc_41016000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_ppi_wrap 0
#define DT_N_S_soc_S_rtc_41016000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_fixed_top 0
#define DT_N_S_soc_S_rtc_41016000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_zli 0
#define DT_N_S_soc_S_rtc_41016000_P_zli_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_clock_frequency 32768
#define DT_N_S_soc_S_rtc_41016000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_interrupts {22 /* 0x16 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_rtc_41016000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_rtc_41016000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_rtc_41016000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_status "disabled"
#define DT_N_S_soc_S_rtc_41016000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_41016000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_41016000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_41016000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_41016000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_41016000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_41016000, status, 0)
#define DT_N_S_soc_S_rtc_41016000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_41016000, status, 0)
#define DT_N_S_soc_S_rtc_41016000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_41016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41016000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_41016000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41016000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_41016000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_rtc_41016000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_rtc_41016000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-rtc
#define DT_N_S_soc_S_rtc_41016000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_rtc
#define DT_N_S_soc_S_rtc_41016000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RTC
#define DT_N_S_soc_S_rtc_41016000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_41016000, compatible, 0)
#define DT_N_S_soc_S_rtc_41016000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_41016000, compatible, 0)
#define DT_N_S_soc_S_rtc_41016000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_41016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41016000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_41016000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_41016000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_41016000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_41016000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_41016000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_41016000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_41016000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/swi@4101a000
 *
 * Node identifier: DT_N_S_soc_S_swi_4101a000
 *
 * Binding (compatible = nordic,nrf-swi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-swi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_swi_4101a000_PATH "/soc/swi@4101a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_swi_4101a000_FULL_NAME "swi@4101a000"
#define DT_N_S_soc_S_swi_4101a000_FULL_NAME_UNQUOTED swi@4101a000
#define DT_N_S_soc_S_swi_4101a000_FULL_NAME_TOKEN swi_4101a000
#define DT_N_S_soc_S_swi_4101a000_FULL_NAME_UPPER_TOKEN SWI_4101A000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_swi_4101a000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_swi_4101a000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_swi_4101a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_swi_4101a000_FOREACH_NODELABEL(fn) fn(swi0)
#define DT_N_S_soc_S_swi_4101a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(swi0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_swi_4101a000_CHILD_NUM 0
#define DT_N_S_soc_S_swi_4101a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_swi_4101a000_HASH tDaji4lvh0U06faP3ZgLFb1C50ComXboTg6I__HNoKw

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_swi_4101a000_ORD 52
#define DT_N_S_soc_S_swi_4101a000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_swi_4101a000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_swi_4101a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_swi_4101a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_swi DT_N_S_soc_S_swi_4101a000
#define DT_N_NODELABEL_swi0        DT_N_S_soc_S_swi_4101a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_swi_4101a000_REG_NUM 1
#define DT_N_S_soc_S_swi_4101a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_REG_IDX_0_VAL_ADDRESS 1090625536 /* 0x4101a000 */
#define DT_N_S_soc_S_swi_4101a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_swi_4101a000_RANGES_NUM 0
#define DT_N_S_soc_S_swi_4101a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_swi_4101a000_IRQ_NUM 1
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_swi_4101a000_IRQ_LEVEL 1
#define DT_N_S_soc_S_swi_4101a000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_swi_4101a000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_swi_4101a000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_COMPAT_MODEL_IDX_0 "nrf-swi"
#define DT_N_S_soc_S_swi_4101a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_swi_4101a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_swi_4101a000_P_reg {1090625536 /* 0x4101a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_swi_4101a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_reg_IDX_0 1090625536
#define DT_N_S_soc_S_swi_4101a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_swi_4101a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_interrupts {26 /* 0x1a */, 1 /* 0x1 */}
#define DT_N_S_soc_S_swi_4101a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_swi_4101a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_swi_4101a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_status "okay"
#define DT_N_S_soc_S_swi_4101a000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_swi_4101a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_swi_4101a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_swi_4101a000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_swi_4101a000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_swi_4101a000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101a000, status, 0)
#define DT_N_S_soc_S_swi_4101a000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101a000, status, 0)
#define DT_N_S_soc_S_swi_4101a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101a000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101a000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101a000_P_status_LEN 1
#define DT_N_S_soc_S_swi_4101a000_P_status_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_compatible {"nordic,nrf-swi"}
#define DT_N_S_soc_S_swi_4101a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_compatible_IDX_0 "nordic,nrf-swi"
#define DT_N_S_soc_S_swi_4101a000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_swi_4101a000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_swi_4101a000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_swi_4101a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101a000, compatible, 0)
#define DT_N_S_soc_S_swi_4101a000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101a000, compatible, 0)
#define DT_N_S_soc_S_swi_4101a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101a000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101a000_P_compatible_LEN 1
#define DT_N_S_soc_S_swi_4101a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_swi_4101a000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_wakeup_source 0
#define DT_N_S_soc_S_swi_4101a000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_swi_4101a000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_swi_4101a000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/swi@4101b000
 *
 * Node identifier: DT_N_S_soc_S_swi_4101b000
 *
 * Binding (compatible = nordic,nrf-swi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-swi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_swi_4101b000_PATH "/soc/swi@4101b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_swi_4101b000_FULL_NAME "swi@4101b000"
#define DT_N_S_soc_S_swi_4101b000_FULL_NAME_UNQUOTED swi@4101b000
#define DT_N_S_soc_S_swi_4101b000_FULL_NAME_TOKEN swi_4101b000
#define DT_N_S_soc_S_swi_4101b000_FULL_NAME_UPPER_TOKEN SWI_4101B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_swi_4101b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_swi_4101b000_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_swi_4101b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_swi_4101b000_FOREACH_NODELABEL(fn) fn(swi1)
#define DT_N_S_soc_S_swi_4101b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(swi1, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_swi_4101b000_CHILD_NUM 0
#define DT_N_S_soc_S_swi_4101b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_swi_4101b000_HASH mv0gmEGX6EQiZCD07gBTWC1nyfxgKuhIfvmKs0Ek8nQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_swi_4101b000_ORD 53
#define DT_N_S_soc_S_swi_4101b000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_swi_4101b000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_swi_4101b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_swi_4101b000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_swi DT_N_S_soc_S_swi_4101b000
#define DT_N_NODELABEL_swi1        DT_N_S_soc_S_swi_4101b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_swi_4101b000_REG_NUM 1
#define DT_N_S_soc_S_swi_4101b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_REG_IDX_0_VAL_ADDRESS 1090629632 /* 0x4101b000 */
#define DT_N_S_soc_S_swi_4101b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_swi_4101b000_RANGES_NUM 0
#define DT_N_S_soc_S_swi_4101b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_swi_4101b000_IRQ_NUM 1
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_swi_4101b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_swi_4101b000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_swi_4101b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_swi_4101b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_COMPAT_MODEL_IDX_0 "nrf-swi"
#define DT_N_S_soc_S_swi_4101b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_swi_4101b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_swi_4101b000_P_reg {1090629632 /* 0x4101b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_swi_4101b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_reg_IDX_0 1090629632
#define DT_N_S_soc_S_swi_4101b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_swi_4101b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_swi_4101b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_swi_4101b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_swi_4101b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_status "okay"
#define DT_N_S_soc_S_swi_4101b000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_swi_4101b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_swi_4101b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_swi_4101b000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_swi_4101b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_swi_4101b000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101b000, status, 0)
#define DT_N_S_soc_S_swi_4101b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101b000, status, 0)
#define DT_N_S_soc_S_swi_4101b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101b000_P_status_LEN 1
#define DT_N_S_soc_S_swi_4101b000_P_status_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_compatible {"nordic,nrf-swi"}
#define DT_N_S_soc_S_swi_4101b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_compatible_IDX_0 "nordic,nrf-swi"
#define DT_N_S_soc_S_swi_4101b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_swi_4101b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_swi_4101b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_swi_4101b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101b000, compatible, 0)
#define DT_N_S_soc_S_swi_4101b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101b000, compatible, 0)
#define DT_N_S_soc_S_swi_4101b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101b000_P_compatible_LEN 1
#define DT_N_S_soc_S_swi_4101b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_swi_4101b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_wakeup_source 0
#define DT_N_S_soc_S_swi_4101b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_swi_4101b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_swi_4101b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/swi@4101c000
 *
 * Node identifier: DT_N_S_soc_S_swi_4101c000
 *
 * Binding (compatible = nordic,nrf-swi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-swi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_swi_4101c000_PATH "/soc/swi@4101c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_swi_4101c000_FULL_NAME "swi@4101c000"
#define DT_N_S_soc_S_swi_4101c000_FULL_NAME_UNQUOTED swi@4101c000
#define DT_N_S_soc_S_swi_4101c000_FULL_NAME_TOKEN swi_4101c000
#define DT_N_S_soc_S_swi_4101c000_FULL_NAME_UPPER_TOKEN SWI_4101C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_swi_4101c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_swi_4101c000_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_swi_4101c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_swi_4101c000_FOREACH_NODELABEL(fn) fn(swi2)
#define DT_N_S_soc_S_swi_4101c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(swi2, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_swi_4101c000_CHILD_NUM 0
#define DT_N_S_soc_S_swi_4101c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_swi_4101c000_HASH Ih4mxZSnufHo1XWI1bFBc1cd4bJib2B9O0akGJJpa6k

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_swi_4101c000_ORD 54
#define DT_N_S_soc_S_swi_4101c000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_swi_4101c000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_swi_4101c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_swi_4101c000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_swi DT_N_S_soc_S_swi_4101c000
#define DT_N_NODELABEL_swi2        DT_N_S_soc_S_swi_4101c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_swi_4101c000_REG_NUM 1
#define DT_N_S_soc_S_swi_4101c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_REG_IDX_0_VAL_ADDRESS 1090633728 /* 0x4101c000 */
#define DT_N_S_soc_S_swi_4101c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_swi_4101c000_RANGES_NUM 0
#define DT_N_S_soc_S_swi_4101c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_swi_4101c000_IRQ_NUM 1
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_swi_4101c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_swi_4101c000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_swi_4101c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_swi_4101c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_COMPAT_MODEL_IDX_0 "nrf-swi"
#define DT_N_S_soc_S_swi_4101c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_swi_4101c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_swi_4101c000_P_reg {1090633728 /* 0x4101c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_swi_4101c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_reg_IDX_0 1090633728
#define DT_N_S_soc_S_swi_4101c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_swi_4101c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_swi_4101c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_swi_4101c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_swi_4101c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_status "okay"
#define DT_N_S_soc_S_swi_4101c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_swi_4101c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_swi_4101c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_swi_4101c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_swi_4101c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_swi_4101c000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101c000, status, 0)
#define DT_N_S_soc_S_swi_4101c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101c000, status, 0)
#define DT_N_S_soc_S_swi_4101c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101c000_P_status_LEN 1
#define DT_N_S_soc_S_swi_4101c000_P_status_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_compatible {"nordic,nrf-swi"}
#define DT_N_S_soc_S_swi_4101c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_compatible_IDX_0 "nordic,nrf-swi"
#define DT_N_S_soc_S_swi_4101c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_swi_4101c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_swi_4101c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_swi_4101c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101c000, compatible, 0)
#define DT_N_S_soc_S_swi_4101c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101c000, compatible, 0)
#define DT_N_S_soc_S_swi_4101c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101c000_P_compatible_LEN 1
#define DT_N_S_soc_S_swi_4101c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_swi_4101c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_wakeup_source 0
#define DT_N_S_soc_S_swi_4101c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_swi_4101c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_swi_4101c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/swi@4101d000
 *
 * Node identifier: DT_N_S_soc_S_swi_4101d000
 *
 * Binding (compatible = nordic,nrf-swi):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-swi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_swi_4101d000_PATH "/soc/swi@4101d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_swi_4101d000_FULL_NAME "swi@4101d000"
#define DT_N_S_soc_S_swi_4101d000_FULL_NAME_UNQUOTED swi@4101d000
#define DT_N_S_soc_S_swi_4101d000_FULL_NAME_TOKEN swi_4101d000
#define DT_N_S_soc_S_swi_4101d000_FULL_NAME_UPPER_TOKEN SWI_4101D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_swi_4101d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_swi_4101d000_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_swi_4101d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_swi_4101d000_FOREACH_NODELABEL(fn) fn(swi3)
#define DT_N_S_soc_S_swi_4101d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(swi3, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101d000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_swi_4101d000_CHILD_NUM 0
#define DT_N_S_soc_S_swi_4101d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_swi_4101d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_swi_4101d000_HASH OX1VGpczR5bBqi3c7Pgj4VHwU80DsYDu1EomWPl81BA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_swi_4101d000_ORD 55
#define DT_N_S_soc_S_swi_4101d000_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_swi_4101d000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_swi_4101d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_swi_4101d000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_swi DT_N_S_soc_S_swi_4101d000
#define DT_N_NODELABEL_swi3        DT_N_S_soc_S_swi_4101d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_swi_4101d000_REG_NUM 1
#define DT_N_S_soc_S_swi_4101d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_REG_IDX_0_VAL_ADDRESS 1090637824 /* 0x4101d000 */
#define DT_N_S_soc_S_swi_4101d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_swi_4101d000_RANGES_NUM 0
#define DT_N_S_soc_S_swi_4101d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_swi_4101d000_IRQ_NUM 1
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_swi_4101d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_swi_4101d000_COMPAT_MATCHES_nordic_nrf_swi 1
#define DT_N_S_soc_S_swi_4101d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_swi_4101d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_COMPAT_MODEL_IDX_0 "nrf-swi"
#define DT_N_S_soc_S_swi_4101d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_swi_4101d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_swi_4101d000_P_reg {1090637824 /* 0x4101d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_swi_4101d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_reg_IDX_0 1090637824
#define DT_N_S_soc_S_swi_4101d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_swi_4101d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_interrupts {29 /* 0x1d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_swi_4101d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_swi_4101d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_swi_4101d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_status "okay"
#define DT_N_S_soc_S_swi_4101d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_swi_4101d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_swi_4101d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_swi_4101d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_swi_4101d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_swi_4101d000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101d000, status, 0)
#define DT_N_S_soc_S_swi_4101d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101d000, status, 0)
#define DT_N_S_soc_S_swi_4101d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101d000_P_status_LEN 1
#define DT_N_S_soc_S_swi_4101d000_P_status_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_compatible {"nordic,nrf-swi"}
#define DT_N_S_soc_S_swi_4101d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_compatible_IDX_0 "nordic,nrf-swi"
#define DT_N_S_soc_S_swi_4101d000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-swi
#define DT_N_S_soc_S_swi_4101d000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_swi
#define DT_N_S_soc_S_swi_4101d000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_SWI
#define DT_N_S_soc_S_swi_4101d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_swi_4101d000, compatible, 0)
#define DT_N_S_soc_S_swi_4101d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_swi_4101d000, compatible, 0)
#define DT_N_S_soc_S_swi_4101d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_swi_4101d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_swi_4101d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_swi_4101d000_P_compatible_LEN 1
#define DT_N_S_soc_S_swi_4101d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_swi_4101d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_wakeup_source 0
#define DT_N_S_soc_S_swi_4101d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_swi_4101d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_swi_4101d000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/temp@41010000
 *
 * Node identifier: DT_N_S_soc_S_temp_41010000
 *
 * Binding (compatible = nordic,nrf-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/nordic,nrf-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_temp_41010000_PATH "/soc/temp@41010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_temp_41010000_FULL_NAME "temp@41010000"
#define DT_N_S_soc_S_temp_41010000_FULL_NAME_UNQUOTED temp@41010000
#define DT_N_S_soc_S_temp_41010000_FULL_NAME_TOKEN temp_41010000
#define DT_N_S_soc_S_temp_41010000_FULL_NAME_UPPER_TOKEN TEMP_41010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_temp_41010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_temp_41010000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_temp_41010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_temp_41010000_FOREACH_NODELABEL(fn) fn(temp)
#define DT_N_S_soc_S_temp_41010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(temp, __VA_ARGS__)
#define DT_N_S_soc_S_temp_41010000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_temp_41010000_CHILD_NUM 0
#define DT_N_S_soc_S_temp_41010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_temp_41010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_temp_41010000_HASH sj_O2Z1JVJR9Bk9S6zREjFeo6CIwZ17sEEmF3oeWZjo

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_temp_41010000_ORD 56
#define DT_N_S_soc_S_temp_41010000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_temp_41010000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_temp_41010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_temp_41010000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_temp DT_N_S_soc_S_temp_41010000
#define DT_N_NODELABEL_temp         DT_N_S_soc_S_temp_41010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_temp_41010000_REG_NUM 1
#define DT_N_S_soc_S_temp_41010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_REG_IDX_0_VAL_ADDRESS 1090584576 /* 0x41010000 */
#define DT_N_S_soc_S_temp_41010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_temp_41010000_RANGES_NUM 0
#define DT_N_S_soc_S_temp_41010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_temp_41010000_IRQ_NUM 1
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_temp_41010000_IRQ_LEVEL 1
#define DT_N_S_soc_S_temp_41010000_COMPAT_MATCHES_nordic_nrf_temp 1
#define DT_N_S_soc_S_temp_41010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_temp_41010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_COMPAT_MODEL_IDX_0 "nrf-temp"
#define DT_N_S_soc_S_temp_41010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_temp_41010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_temp_41010000_P_reg {1090584576 /* 0x41010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_temp_41010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_reg_IDX_0 1090584576
#define DT_N_S_soc_S_temp_41010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_temp_41010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_temp_41010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_temp_41010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_temp_41010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_status "okay"
#define DT_N_S_soc_S_temp_41010000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_temp_41010000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_temp_41010000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_temp_41010000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_temp_41010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_temp_41010000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_41010000, status, 0)
#define DT_N_S_soc_S_temp_41010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_41010000, status, 0)
#define DT_N_S_soc_S_temp_41010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_41010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_41010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_41010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_41010000_P_status_LEN 1
#define DT_N_S_soc_S_temp_41010000_P_status_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_compatible {"nordic,nrf-temp"}
#define DT_N_S_soc_S_temp_41010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_compatible_IDX_0 "nordic,nrf-temp"
#define DT_N_S_soc_S_temp_41010000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-temp
#define DT_N_S_soc_S_temp_41010000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_temp
#define DT_N_S_soc_S_temp_41010000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TEMP
#define DT_N_S_soc_S_temp_41010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_temp_41010000, compatible, 0)
#define DT_N_S_soc_S_temp_41010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_temp_41010000, compatible, 0)
#define DT_N_S_soc_S_temp_41010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_temp_41010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_41010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_temp_41010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_temp_41010000_P_compatible_LEN 1
#define DT_N_S_soc_S_temp_41010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_temp_41010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_wakeup_source 0
#define DT_N_S_soc_S_temp_41010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_temp_41010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_temp_41010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@4100c000
 *
 * Node identifier: DT_N_S_soc_S_timer_4100c000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_4100c000_PATH "/soc/timer@4100c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_4100c000_FULL_NAME "timer@4100c000"
#define DT_N_S_soc_S_timer_4100c000_FULL_NAME_UNQUOTED timer@4100c000
#define DT_N_S_soc_S_timer_4100c000_FULL_NAME_TOKEN timer_4100c000
#define DT_N_S_soc_S_timer_4100c000_FULL_NAME_UPPER_TOKEN TIMER_4100C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_4100c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_4100c000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_4100c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_4100c000_FOREACH_NODELABEL(fn) fn(timer0)
#define DT_N_S_soc_S_timer_4100c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4100c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_4100c000_CHILD_NUM 0
#define DT_N_S_soc_S_timer_4100c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_4100c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_4100c000_HASH cWaY3Y8WTUCtMn30R_umN004yBlIbzJ0792dxodjqpU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_4100c000_ORD 57
#define DT_N_S_soc_S_timer_4100c000_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_4100c000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_4100c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_4100c000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_timer_4100c000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_timer_4100c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_4100c000_REG_NUM 1
#define DT_N_S_soc_S_timer_4100c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_REG_IDX_0_VAL_ADDRESS 1090568192 /* 0x4100c000 */
#define DT_N_S_soc_S_timer_4100c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_4100c000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_4100c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_4100c000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_4100c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_4100c000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_4100c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_4100c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_4100c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_4100c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_4100c000_P_reg {1090568192 /* 0x4100c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_4100c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_reg_IDX_0 1090568192
#define DT_N_S_soc_S_timer_4100c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_4100c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_cc_num 8
#define DT_N_S_soc_S_timer_4100c000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_4100c000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_interrupts {12 /* 0xc */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_4100c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_timer_4100c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_4100c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_prescaler 0
#define DT_N_S_soc_S_timer_4100c000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_zli 0
#define DT_N_S_soc_S_timer_4100c000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_status "disabled"
#define DT_N_S_soc_S_timer_4100c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_4100c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_4100c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_4100c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_4100c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_4100c000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4100c000, status, 0)
#define DT_N_S_soc_S_timer_4100c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4100c000, status, 0)
#define DT_N_S_soc_S_timer_4100c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4100c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4100c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4100c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4100c000_P_status_LEN 1
#define DT_N_S_soc_S_timer_4100c000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_4100c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_4100c000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_4100c000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_4100c000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_4100c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_4100c000, compatible, 0)
#define DT_N_S_soc_S_timer_4100c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_4100c000, compatible, 0)
#define DT_N_S_soc_S_timer_4100c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_4100c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4100c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_4100c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_4100c000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_4100c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_4100c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_4100c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_4100c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_4100c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@41019000
 *
 * Node identifier: DT_N_S_soc_S_timer_41019000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_41019000_PATH "/soc/timer@41019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_41019000_FULL_NAME "timer@41019000"
#define DT_N_S_soc_S_timer_41019000_FULL_NAME_UNQUOTED timer@41019000
#define DT_N_S_soc_S_timer_41019000_FULL_NAME_TOKEN timer_41019000
#define DT_N_S_soc_S_timer_41019000_FULL_NAME_UPPER_TOKEN TIMER_41019000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_41019000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_41019000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_41019000_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_41019000_FOREACH_NODELABEL(fn) fn(timer2)
#define DT_N_S_soc_S_timer_41019000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer2, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41019000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_41019000_CHILD_NUM 0
#define DT_N_S_soc_S_timer_41019000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_41019000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_41019000_HASH 8eIkR0OVkxo5vpcEqVN9hR5qnk_kV98ycNuNvSEx98w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_41019000_ORD 58
#define DT_N_S_soc_S_timer_41019000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_41019000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_41019000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_41019000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_timer_41019000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_timer_41019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_41019000_REG_NUM 1
#define DT_N_S_soc_S_timer_41019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_REG_IDX_0_VAL_ADDRESS 1090621440 /* 0x41019000 */
#define DT_N_S_soc_S_timer_41019000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_41019000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_41019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_41019000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_timer_41019000_IRQ_LEVEL 1
#define DT_N_S_soc_S_timer_41019000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_timer_41019000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_timer_41019000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_COMPAT_MODEL_IDX_0 "nrf-timer"
#define DT_N_S_soc_S_timer_41019000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_41019000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_41019000_P_reg {1090621440 /* 0x41019000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_41019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_reg_IDX_0 1090621440
#define DT_N_S_soc_S_timer_41019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_41019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_cc_num 8
#define DT_N_S_soc_S_timer_41019000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_max_bit_width 32
#define DT_N_S_soc_S_timer_41019000_P_max_bit_width_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_interrupts {25 /* 0x19 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_timer_41019000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timer_41019000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_timer_41019000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_prescaler 0
#define DT_N_S_soc_S_timer_41019000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_zli 0
#define DT_N_S_soc_S_timer_41019000_P_zli_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_status "disabled"
#define DT_N_S_soc_S_timer_41019000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_41019000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_41019000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_41019000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_41019000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_41019000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_41019000, status, 0)
#define DT_N_S_soc_S_timer_41019000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_41019000, status, 0)
#define DT_N_S_soc_S_timer_41019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_41019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41019000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_41019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41019000_P_status_LEN 1
#define DT_N_S_soc_S_timer_41019000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_timer_41019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_timer_41019000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-timer
#define DT_N_S_soc_S_timer_41019000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_timer
#define DT_N_S_soc_S_timer_41019000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_TIMER
#define DT_N_S_soc_S_timer_41019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_41019000, compatible, 0)
#define DT_N_S_soc_S_timer_41019000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_41019000, compatible, 0)
#define DT_N_S_soc_S_timer_41019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_41019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41019000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_41019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_41019000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_41019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_41019000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_41019000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_41019000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_41019000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv8m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv8m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_timer_e000e010_HASH aZrzPLAIRgEwRZJIvTCzJONA6gPgc4QlhkiU5oWGArA

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 59
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, status, 0)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@41013000
 *
 * Node identifier: DT_N_S_soc_S_uart_41013000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE/dts/bindings/serial/nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_41013000_PATH "/soc/uart@41013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_41013000_FULL_NAME "uart@41013000"
#define DT_N_S_soc_S_uart_41013000_FULL_NAME_UNQUOTED uart@41013000
#define DT_N_S_soc_S_uart_41013000_FULL_NAME_TOKEN uart_41013000
#define DT_N_S_soc_S_uart_41013000_FULL_NAME_UPPER_TOKEN UART_41013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_41013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_41013000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_41013000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_41013000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_41013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_41013000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_41013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_41013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uart_41013000_HASH 0DaCCgIPmXtnxBfPmsm8CT2YFImVL8X30iPiM3ZGbPk

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_41013000_ORD 60
#define DT_N_S_soc_S_uart_41013000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_41013000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */ \
	35, /* /pin-controller/uart0_default */ \
	37, /* /pin-controller/uart0_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_41013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_41013000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte DT_N_S_soc_S_uart_41013000
#define DT_N_NODELABEL_uart0         DT_N_S_soc_S_uart_41013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_41013000_REG_NUM 1
#define DT_N_S_soc_S_uart_41013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_REG_IDX_0_VAL_ADDRESS 1090596864 /* 0x41013000 */
#define DT_N_S_soc_S_uart_41013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_41013000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_41013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_41013000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_uart_41013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_41013000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_uart_41013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uart_41013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_COMPAT_MODEL_IDX_0 "nrf-uarte"
#define DT_N_S_soc_S_uart_41013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NUM 2
#define DT_N_S_soc_S_uart_41013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_41013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_41013000_PINCTRL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_PINCTRL_IDX_1_TOKEN sleep
#define DT_N_S_soc_S_uart_41013000_PINCTRL_IDX_1_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NAME_sleep_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NAME_sleep_IDX 1
#define DT_N_S_soc_S_uart_41013000_PINCTRL_NAME_sleep_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep

/* Generic property macros: */
#define DT_N_S_soc_S_uart_41013000_P_endtx_stoptx_supported 0
#define DT_N_S_soc_S_uart_41013000_P_endtx_stoptx_supported_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_frame_timeout_supported 0
#define DT_N_S_soc_S_uart_41013000_P_frame_timeout_supported_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_cross_domain_pins_supported 0
#define DT_N_S_soc_S_uart_41013000_P_cross_domain_pins_supported_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_reg {1090596864 /* 0x41013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_41013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_reg_IDX_0 1090596864
#define DT_N_S_soc_S_uart_41013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_41013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_interrupts {19 /* 0x13 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_uart_41013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_uart_41013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_uart_41013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_41013000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_41013000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_41013000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_41013000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names {"default", "sleep"}
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_1 "sleep"
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_1_STRING_UNQUOTED sleep
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_1_STRING_TOKEN sleep
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_IDX_1_STRING_UPPER_TOKEN SLEEP
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 0) \
	fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 1)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_uart_41013000, pinctrl_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_LEN 2
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_disable_rx 0
#define DT_N_S_soc_S_uart_41013000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_current_speed 115200
#define DT_N_S_soc_S_uart_41013000_P_current_speed_IDX_0_ENUM_IDX 12
#define DT_N_S_soc_S_uart_41013000_P_current_speed_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_current_speed_IDX_0_ENUM_VAL_115200_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_41013000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_parity "none"
#define DT_N_S_soc_S_uart_41013000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_uart_41013000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_uart_41013000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_uart_41013000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_uart_41013000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_uart_41013000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_41013000, parity, 0)
#define DT_N_S_soc_S_uart_41013000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_41013000, parity, 0)
#define DT_N_S_soc_S_uart_41013000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_41013000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_41013000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_parity_LEN 1
#define DT_N_S_soc_S_uart_41013000_P_parity_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_status "disabled"
#define DT_N_S_soc_S_uart_41013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_41013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_41013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_41013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_41013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_41013000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_41013000, status, 0)
#define DT_N_S_soc_S_uart_41013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_41013000, status, 0)
#define DT_N_S_soc_S_uart_41013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_41013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_41013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_status_LEN 1
#define DT_N_S_soc_S_uart_41013000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_uart_41013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_uart_41013000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uarte
#define DT_N_S_soc_S_uart_41013000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uarte
#define DT_N_S_soc_S_uart_41013000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UARTE
#define DT_N_S_soc_S_uart_41013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_41013000, compatible, 0)
#define DT_N_S_soc_S_uart_41013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_41013000, compatible, 0)
#define DT_N_S_soc_S_uart_41013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_41013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_41013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_41013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_41013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_41013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_41013000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_IDX_0 DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_IDX_0_PH DT_N_S_pin_controller_S_uart0_sleep
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_41013000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_41013000, pinctrl_1, 0)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_41013000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_41013000, pinctrl_1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_LEN 1
#define DT_N_S_soc_S_uart_41013000_P_pinctrl_1_EXISTS 1

/*
 * Devicetree node: /soc/uicr@1ff8000
 *
 * Node identifier: DT_N_S_soc_S_uicr_1ff8000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE/dts/bindings/arm/nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_1ff8000_PATH "/soc/uicr@1ff8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uicr_1ff8000_FULL_NAME "uicr@1ff8000"
#define DT_N_S_soc_S_uicr_1ff8000_FULL_NAME_UNQUOTED uicr@1ff8000
#define DT_N_S_soc_S_uicr_1ff8000_FULL_NAME_TOKEN uicr_1ff8000
#define DT_N_S_soc_S_uicr_1ff8000_FULL_NAME_UPPER_TOKEN UICR_1FF8000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_1ff8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uicr_1ff8000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uicr_1ff8000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_NODELABEL(fn) fn(uicr)
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uicr, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uicr_1ff8000_CHILD_NUM 0
#define DT_N_S_soc_S_uicr_1ff8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_uicr_1ff8000_HASH LlKCp_V8FJelhYYdfzMDHj1pwYEtPwcGAt6DsFpVeXU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_1ff8000_ORD 61
#define DT_N_S_soc_S_uicr_1ff8000_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_1ff8000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_1ff8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_1ff8000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_1ff8000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_1ff8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uicr_1ff8000_REG_NUM 1
#define DT_N_S_soc_S_uicr_1ff8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_REG_IDX_0_VAL_ADDRESS 33521664 /* 0x1ff8000 */
#define DT_N_S_soc_S_uicr_1ff8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_1ff8000_RANGES_NUM 0
#define DT_N_S_soc_S_uicr_1ff8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uicr_1ff8000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_1ff8000_IRQ_LEVEL 0
#define DT_N_S_soc_S_uicr_1ff8000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_1ff8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_uicr_1ff8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_COMPAT_MODEL_IDX_0 "nrf-uicr"
#define DT_N_S_soc_S_uicr_1ff8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uicr_1ff8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_1ff8000_P_reg {33521664 /* 0x1ff8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_1ff8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_reg_IDX_0 33521664
#define DT_N_S_soc_S_uicr_1ff8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_1ff8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_nfct_pins_as_gpios 0
#define DT_N_S_soc_S_uicr_1ff8000_P_nfct_pins_as_gpios_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_gpio_as_nreset 0
#define DT_N_S_soc_S_uicr_1ff8000_P_gpio_as_nreset_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_status "okay"
#define DT_N_S_soc_S_uicr_1ff8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uicr_1ff8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uicr_1ff8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_1ff8000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uicr_1ff8000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_1ff8000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_1ff8000, status, 0)
#define DT_N_S_soc_S_uicr_1ff8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_1ff8000, status, 0)
#define DT_N_S_soc_S_uicr_1ff8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_1ff8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_1ff8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_1ff8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_1ff8000_P_status_LEN 1
#define DT_N_S_soc_S_uicr_1ff8000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-uicr
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_uicr
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_UICR
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_1ff8000, compatible, 0)
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uicr_1ff8000, compatible, 0)
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_1ff8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uicr_1ff8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_1ff8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uicr_1ff8000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_wakeup_source 0
#define DT_N_S_soc_S_uicr_1ff8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uicr_1ff8000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uicr_1ff8000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/vmc@41081000
 *
 * Node identifier: DT_N_S_soc_S_vmc_41081000
 *
 * Binding (compatible = nordic,nrf-vmc):
 *   $ZEPHYR_BASE/dts/bindings/power/nordic,nrf-vmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_vmc_41081000_PATH "/soc/vmc@41081000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_vmc_41081000_FULL_NAME "vmc@41081000"
#define DT_N_S_soc_S_vmc_41081000_FULL_NAME_UNQUOTED vmc@41081000
#define DT_N_S_soc_S_vmc_41081000_FULL_NAME_TOKEN vmc_41081000
#define DT_N_S_soc_S_vmc_41081000_FULL_NAME_UPPER_TOKEN VMC_41081000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_vmc_41081000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_vmc_41081000_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_vmc_41081000_NODELABEL_NUM 1
#define DT_N_S_soc_S_vmc_41081000_FOREACH_NODELABEL(fn) fn(vmc)
#define DT_N_S_soc_S_vmc_41081000_FOREACH_NODELABEL_VARGS(fn, ...) fn(vmc, __VA_ARGS__)
#define DT_N_S_soc_S_vmc_41081000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_vmc_41081000_CHILD_NUM 0
#define DT_N_S_soc_S_vmc_41081000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_vmc_41081000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_vmc_41081000_HASH nhvA49Q6rPxPxZKwoIy4DpvuytrZnWaSrdxpRPEg52U

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_vmc_41081000_ORD 62
#define DT_N_S_soc_S_vmc_41081000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_vmc_41081000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_vmc_41081000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_vmc_41081000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_vmc DT_N_S_soc_S_vmc_41081000
#define DT_N_NODELABEL_vmc         DT_N_S_soc_S_vmc_41081000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_vmc_41081000_REG_NUM 1
#define DT_N_S_soc_S_vmc_41081000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_REG_IDX_0_VAL_ADDRESS 1091047424 /* 0x41081000 */
#define DT_N_S_soc_S_vmc_41081000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_vmc_41081000_RANGES_NUM 0
#define DT_N_S_soc_S_vmc_41081000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_vmc_41081000_IRQ_NUM 0
#define DT_N_S_soc_S_vmc_41081000_IRQ_LEVEL 0
#define DT_N_S_soc_S_vmc_41081000_COMPAT_MATCHES_nordic_nrf_vmc 1
#define DT_N_S_soc_S_vmc_41081000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_vmc_41081000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_COMPAT_MODEL_IDX_0 "nrf-vmc"
#define DT_N_S_soc_S_vmc_41081000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_vmc_41081000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_vmc_41081000_P_reg {1091047424 /* 0x41081000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_vmc_41081000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_reg_IDX_0 1091047424
#define DT_N_S_soc_S_vmc_41081000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_vmc_41081000_P_reg_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_status "okay"
#define DT_N_S_soc_S_vmc_41081000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_vmc_41081000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_vmc_41081000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_vmc_41081000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_vmc_41081000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_vmc_41081000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_vmc_41081000, status, 0)
#define DT_N_S_soc_S_vmc_41081000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_vmc_41081000, status, 0)
#define DT_N_S_soc_S_vmc_41081000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_vmc_41081000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vmc_41081000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_vmc_41081000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vmc_41081000_P_status_LEN 1
#define DT_N_S_soc_S_vmc_41081000_P_status_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_compatible {"nordic,nrf-vmc"}
#define DT_N_S_soc_S_vmc_41081000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_compatible_IDX_0 "nordic,nrf-vmc"
#define DT_N_S_soc_S_vmc_41081000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-vmc
#define DT_N_S_soc_S_vmc_41081000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_vmc
#define DT_N_S_soc_S_vmc_41081000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_VMC
#define DT_N_S_soc_S_vmc_41081000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_vmc_41081000, compatible, 0)
#define DT_N_S_soc_S_vmc_41081000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_vmc_41081000, compatible, 0)
#define DT_N_S_soc_S_vmc_41081000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_vmc_41081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vmc_41081000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_vmc_41081000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vmc_41081000_P_compatible_LEN 1
#define DT_N_S_soc_S_vmc_41081000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_vmc_41081000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_wakeup_source 0
#define DT_N_S_soc_S_vmc_41081000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_vmc_41081000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_vmc_41081000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@4100b000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_4100b000
 *
 * Binding (compatible = nordic,nrf-wdt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/nordic,nrf-wdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_4100b000_PATH "/soc/watchdog@4100b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_4100b000_FULL_NAME "watchdog@4100b000"
#define DT_N_S_soc_S_watchdog_4100b000_FULL_NAME_UNQUOTED watchdog@4100b000
#define DT_N_S_soc_S_watchdog_4100b000_FULL_NAME_TOKEN watchdog_4100b000
#define DT_N_S_soc_S_watchdog_4100b000_FULL_NAME_UPPER_TOKEN WATCHDOG_4100B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_4100b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_4100b000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_4100b000_NODELABEL_NUM 2
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_NODELABEL(fn) fn(wdt) fn(wdt0)
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt, __VA_ARGS__) fn(wdt0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_4100b000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_4100b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_watchdog_4100b000_HASH waLM0XOlrYxIOaL9iMYRvpK3SO4ifrttdaNANtiltYg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_4100b000_ORD 63
#define DT_N_S_soc_S_watchdog_4100b000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_4100b000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_4100b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_4100b000_EXISTS 1
#define DT_N_ALIAS_watchdog0       DT_N_S_soc_S_watchdog_4100b000
#define DT_N_INST_0_nordic_nrf_wdt DT_N_S_soc_S_watchdog_4100b000
#define DT_N_NODELABEL_wdt         DT_N_S_soc_S_watchdog_4100b000
#define DT_N_NODELABEL_wdt0        DT_N_S_soc_S_watchdog_4100b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_4100b000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_4100b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_REG_IDX_0_VAL_ADDRESS 1090564096 /* 0x4100b000 */
#define DT_N_S_soc_S_watchdog_4100b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_4100b000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_4100b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_4100b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_4100b000_COMPAT_MATCHES_nordic_nrf_wdt 1
#define DT_N_S_soc_S_watchdog_4100b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_watchdog_4100b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_COMPAT_MODEL_IDX_0 "nrf-wdt"
#define DT_N_S_soc_S_watchdog_4100b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_4100b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_4100b000_P_reg {1090564096 /* 0x4100b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_4100b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_reg_IDX_0 1090564096
#define DT_N_S_soc_S_watchdog_4100b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_4100b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_watchdog_4100b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_watchdog_4100b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_watchdog_4100b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_status "okay"
#define DT_N_S_soc_S_watchdog_4100b000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_4100b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_4100b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_4100b000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_4100b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_4100b000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_4100b000, status, 0)
#define DT_N_S_soc_S_watchdog_4100b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_4100b000, status, 0)
#define DT_N_S_soc_S_watchdog_4100b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_4100b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4100b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_4100b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4100b000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_4100b000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible {"nordic,nrf-wdt"}
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_IDX_0 "nordic,nrf-wdt"
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-wdt
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_wdt
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_WDT
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_4100b000, compatible, 0)
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_4100b000, compatible, 0)
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_4100b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_4100b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_4100b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_4100b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_4100b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_4100b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_4100b000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@41080000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000
 *
 * Binding (compatible = nordic,nrf53-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/nordic,nrf53-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_PATH "/soc/flash-controller@41080000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_FULL_NAME "flash-controller@41080000"
#define DT_N_S_soc_S_flash_controller_41080000_FULL_NAME_UNQUOTED flash-controller@41080000
#define DT_N_S_soc_S_flash_controller_41080000_FULL_NAME_TOKEN flash_controller_41080000
#define DT_N_S_soc_S_flash_controller_41080000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_41080000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_NODELABEL(fn) fn(flash_controller)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash_controller, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_HASH i9D8RbWoyQOXF_YDfwe17tM5XOtr5SwC1J8K4_qKwhg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_ORD 64
#define DT_N_S_soc_S_flash_controller_41080000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_SUPPORTS_ORDS \
	65, /* /soc/flash-controller@41080000/flash@1000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_EXISTS 1
#define DT_N_INST_0_nordic_nrf53_flash_controller DT_N_S_soc_S_flash_controller_41080000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_flash_controller_41080000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_REG_IDX_0_VAL_ADDRESS 1091043328 /* 0x41080000 */
#define DT_N_S_soc_S_flash_controller_41080000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_41080000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_COMPAT_MATCHES_nordic_nrf53_flash_controller 1
#define DT_N_S_soc_S_flash_controller_41080000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_flash_controller_41080000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_COMPAT_MODEL_IDX_0 "nrf53-flash-controller"
#define DT_N_S_soc_S_flash_controller_41080000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_41080000_P_partial_erase 1
#define DT_N_S_soc_S_flash_controller_41080000_P_partial_erase_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_reg {1091043328 /* 0x41080000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_41080000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_reg_IDX_0 1091043328
#define DT_N_S_soc_S_flash_controller_41080000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_41080000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible {"nordic,nrf53-flash-controller"}
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_IDX_0 "nordic,nrf53-flash-controller"
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf53-flash-controller
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf53_flash_controller
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF53_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_41080000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_41080000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_41080000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_41080000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_41080000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@41080000/flash@1000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_PATH "/soc/flash-controller@41080000/flash@1000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FULL_NAME "flash@1000000"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FULL_NAME_UNQUOTED flash@1000000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FULL_NAME_TOKEN flash_1000000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FULL_NAME_UPPER_TOKEN FLASH_1000000

/* Node parent (/soc/flash-controller@41080000) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_PARENT DT_N_S_soc_S_flash_controller_41080000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_NODELABEL(fn) fn(flash1)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_HASH thlEKAel43yNJRgLMd4jeF4V_NNkwlSuRL0dwMmGiwI

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_ORD 65
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_REQUIRES_ORDS \
	64, /* /soc/flash-controller@41080000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_SUPPORTS_ORDS \
	66, /* /soc/flash-controller@41080000/flash@1000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000
#define DT_N_NODELABEL_flash1    DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_REG_IDX_0_VAL_ADDRESS 16777216 /* 0x1000000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_erase_block_size 2048
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_reg {16777216 /* 0x1000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_reg_IDX_0 16777216
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@41080000/flash@1000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_PATH "/soc/flash-controller@41080000/flash@1000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@41080000/flash@1000000) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_CHILD_NUM 4
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_HASH pAnsNMe15Zg_kuvaneHAAzyX6Pj2j5_EFzZKakBAKBg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_ORD 66
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_REQUIRES_ORDS \
	65, /* /soc/flash-controller@41080000/flash@1000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_SUPPORTS_ORDS \
	67, /* /soc/flash-controller@41080000/flash@1000000/partitions/partition@0 */ \
	68, /* /soc/flash-controller@41080000/flash@1000000/partitions/partition@c000 */ \
	69, /* /soc/flash-controller@41080000/flash@1000000/partitions/partition@23000 */ \
	70, /* /soc/flash-controller@41080000/flash@1000000/partitions/partition@3a000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@41080000/flash@1000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@41080000/flash@1000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/flash-controller@41080000/flash@1000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_HASH Lu8lmTWLHaeFb6f3v_n7zJSFXmz0Nhy4DqaPPTiRs8w

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_ORD 67
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	66, /* /soc/flash-controller@41080000/flash@1000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@41080000/flash@1000000/partitions/partition@c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_PATH "/soc/flash-controller@41080000/flash@1000000/partitions/partition@c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FULL_NAME "partition@c000"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FULL_NAME_UNQUOTED partition@c000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FULL_NAME_TOKEN partition_c000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FULL_NAME_UPPER_TOKEN PARTITION_C000

/* Node parent (/soc/flash-controller@41080000/flash@1000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_PARENT DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_HASH yuVQvPwMCBpZXFNOG2XtL9VK1SmXiKTH2JC2NifKWw4

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_ORD 68
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_REQUIRES_ORDS \
	66, /* /soc/flash-controller@41080000/flash@1000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_ADDRESS 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_SIZE 94208 /* 0x17000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_reg {49152 /* 0xc000 */, 94208 /* 0x17000 */}
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_reg_IDX_0 49152
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_reg_IDX_1 94208
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@41080000/flash@1000000/partitions/partition@23000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_PATH "/soc/flash-controller@41080000/flash@1000000/partitions/partition@23000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FULL_NAME "partition@23000"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FULL_NAME_UNQUOTED partition@23000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FULL_NAME_TOKEN partition_23000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FULL_NAME_UPPER_TOKEN PARTITION_23000

/* Node parent (/soc/flash-controller@41080000/flash@1000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_PARENT DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_HASH lQ5gC3_XNHsL_D__EnKOoDCMdkZ8_4ZMYdGmDi5MeMQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_ORD 69
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_REQUIRES_ORDS \
	66, /* /soc/flash-controller@41080000/flash@1000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_REG_IDX_0_VAL_ADDRESS 143360 /* 0x23000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_REG_IDX_0_VAL_SIZE 94208 /* 0x17000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_reg {143360 /* 0x23000 */, 94208 /* 0x17000 */}
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_reg_IDX_0 143360
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_reg_IDX_1 94208
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@41080000/flash@1000000/partitions/partition@3a000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_PATH "/soc/flash-controller@41080000/flash@1000000/partitions/partition@3a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FULL_NAME "partition@3a000"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FULL_NAME_UNQUOTED partition@3a000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FULL_NAME_TOKEN partition_3a000
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FULL_NAME_UPPER_TOKEN PARTITION_3A000

/* Node parent (/soc/flash-controller@41080000/flash@1000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_PARENT DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_HASH DbTxYydjZ0quPejw_JCiHt6_hVgk323X293cdPNNOlQ

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_ORD 70
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_REQUIRES_ORDS \
	66, /* /soc/flash-controller@41080000/flash@1000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_REG_IDX_0_VAL_ADDRESS 237568 /* 0x3a000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_REG_IDX_0_VAL_SIZE 24576 /* 0x6000 */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, label, 0)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_reg {237568 /* 0x3a000 */, 24576 /* 0x6000 */}
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_reg_IDX_0 237568
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_reg_IDX_1 24576
#define DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/power@41005000
 *
 * Node identifier: DT_N_S_soc_S_power_41005000
 *
 * Binding (compatible = nordic,nrf-power):
 *   $ZEPHYR_BASE/dts/bindings/power/nordic,nrf-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_41005000_PATH "/soc/power@41005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_41005000_FULL_NAME "power@41005000"
#define DT_N_S_soc_S_power_41005000_FULL_NAME_UNQUOTED power@41005000
#define DT_N_S_soc_S_power_41005000_FULL_NAME_TOKEN power_41005000
#define DT_N_S_soc_S_power_41005000_FULL_NAME_UPPER_TOKEN POWER_41005000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_power_41005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_41005000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_power_41005000_NODELABEL_NUM 1
#define DT_N_S_soc_S_power_41005000_FOREACH_NODELABEL(fn) fn(power)
#define DT_N_S_soc_S_power_41005000_FOREACH_NODELABEL_VARGS(fn, ...) fn(power, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_41005000_CHILD_NUM 2
#define DT_N_S_soc_S_power_41005000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_power_41005000_HASH MWlUMZ69c6qw3VwNE5UQDyCIdYdLLX0jk0T6bRTUHOU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_41005000_ORD 71
#define DT_N_S_soc_S_power_41005000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_41005000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_41005000_SUPPORTS_ORDS \
	72, /* /soc/power@41005000/gpregret1@4100551c */ \
	73, /* /soc/power@41005000/gpregret2@41005520 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_41005000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_power DT_N_S_soc_S_power_41005000
#define DT_N_NODELABEL_power         DT_N_S_soc_S_power_41005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_41005000_REG_NUM 1
#define DT_N_S_soc_S_power_41005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_REG_IDX_0_VAL_ADDRESS 1090539520 /* 0x41005000 */
#define DT_N_S_soc_S_power_41005000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_power_41005000_RANGES_NUM 0
#define DT_N_S_soc_S_power_41005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_41005000_IRQ_NUM 1
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_power_41005000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_power_41005000_IRQ_LEVEL 1
#define DT_N_S_soc_S_power_41005000_COMPAT_MATCHES_nordic_nrf_power 1
#define DT_N_S_soc_S_power_41005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_41005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_COMPAT_MODEL_IDX_0 "nrf-power"
#define DT_N_S_soc_S_power_41005000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_41005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_41005000_P_reg {1090539520 /* 0x41005000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_power_41005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_reg_IDX_0 1090539520
#define DT_N_S_soc_S_power_41005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_power_41005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_41005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_power_41005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_power_41005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_status "okay"
#define DT_N_S_soc_S_power_41005000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_41005000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_41005000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_41005000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_41005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_power_41005000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_41005000, status, 0)
#define DT_N_S_soc_S_power_41005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000, status, 0)
#define DT_N_S_soc_S_power_41005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_P_status_LEN 1
#define DT_N_S_soc_S_power_41005000_P_status_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_compatible {"nordic,nrf-power"}
#define DT_N_S_soc_S_power_41005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_compatible_IDX_0 "nordic,nrf-power"
#define DT_N_S_soc_S_power_41005000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-power
#define DT_N_S_soc_S_power_41005000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_power
#define DT_N_S_soc_S_power_41005000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_POWER
#define DT_N_S_soc_S_power_41005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_41005000, compatible, 0)
#define DT_N_S_soc_S_power_41005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000, compatible, 0)
#define DT_N_S_soc_S_power_41005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_P_compatible_LEN 1
#define DT_N_S_soc_S_power_41005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_power_41005000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_wakeup_source 0
#define DT_N_S_soc_S_power_41005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_41005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_41005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@41005000/gpregret1@4100551c
 *
 * Node identifier: DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_PATH "/soc/power@41005000/gpregret1@4100551c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FULL_NAME "gpregret1@4100551c"
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FULL_NAME_UNQUOTED gpregret1@4100551c
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FULL_NAME_TOKEN gpregret1_4100551c
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FULL_NAME_UPPER_TOKEN GPREGRET1_4100551C

/* Node parent (/soc/power@41005000) identifier: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_PARENT DT_N_S_soc_S_power_41005000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_NODELABEL_NUM 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_NODELABEL(fn) fn(gpregret1)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpregret1, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_power_41005000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_CHILD_NUM 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_HASH thcltYdyetst_8AHs4rSjlwTFDkCJ__VL5qrVSych94

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_ORD 72
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_REQUIRES_ORDS \
	71, /* /soc/power@41005000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpregret DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c
#define DT_N_NODELABEL_gpregret1        DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_REG_NUM 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_REG_IDX_0_VAL_ADDRESS 1090540828 /* 0x4100551c */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_RANGES_NUM 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_IRQ_NUM 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_IRQ_LEVEL 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_reg {1090540828 /* 0x4100551c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_reg_IDX_0 1090540828
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status "okay"
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, status, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, status, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_LEN 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_status_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, compatible, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, compatible, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_LEN 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_wakeup_source 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/power@41005000/gpregret2@41005520
 *
 * Node identifier: DT_N_S_soc_S_power_41005000_S_gpregret2_41005520
 *
 * Binding (compatible = nordic,nrf-gpregret):
 *   $ZEPHYR_BASE/dts/bindings/retained_mem/nordic,nrf-gpreget.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_PATH "/soc/power@41005000/gpregret2@41005520"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FULL_NAME "gpregret2@41005520"
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FULL_NAME_UNQUOTED gpregret2@41005520
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FULL_NAME_TOKEN gpregret2_41005520
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FULL_NAME_UPPER_TOKEN GPREGRET2_41005520

/* Node parent (/soc/power@41005000) identifier: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_PARENT DT_N_S_soc_S_power_41005000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_NODELABEL_NUM 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_NODELABEL(fn) fn(gpregret2)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpregret2, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_power_41005000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_CHILD_NUM 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_HASH p9GmBW2BXEJT0F5H7QV1pJ_Zu_xSdAie_S9Tp64yVqg

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_ORD 73
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_REQUIRES_ORDS \
	71, /* /soc/power@41005000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_EXISTS 1
#define DT_N_INST_1_nordic_nrf_gpregret DT_N_S_soc_S_power_41005000_S_gpregret2_41005520
#define DT_N_NODELABEL_gpregret2        DT_N_S_soc_S_power_41005000_S_gpregret2_41005520

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_REG_NUM 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_REG_IDX_0_VAL_ADDRESS 1090540832 /* 0x41005520 */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_RANGES_NUM 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_IRQ_NUM 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_IRQ_LEVEL 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_COMPAT_MATCHES_nordic_nrf_gpregret 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_COMPAT_MODEL_IDX_0 "nrf-gpregret"
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_reg {1090540832 /* 0x41005520 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_reg_IDX_0 1090540832
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_reg_IDX_1 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_reg_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status "okay"
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, status, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, status, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_LEN 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_status_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible {"nordic,nrf-gpregret"}
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_IDX_0 "nordic,nrf-gpregret"
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-gpregret
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_gpregret
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_GPREGRET
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, compatible, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, compatible, 0)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_LEN 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_compatible_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_wakeup_source 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_power_41005000_S_gpregret2_41005520_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@41008000
 *
 * Node identifier: DT_N_S_soc_S_radio_41008000
 *
 * Binding (compatible = nordic,nrf-radio):
 *   $ZEPHYR_BASE/dts/bindings/net/wireless/nordic,nrf-radio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_41008000_PATH "/soc/radio@41008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_41008000_FULL_NAME "radio@41008000"
#define DT_N_S_soc_S_radio_41008000_FULL_NAME_UNQUOTED radio@41008000
#define DT_N_S_soc_S_radio_41008000_FULL_NAME_TOKEN radio_41008000
#define DT_N_S_soc_S_radio_41008000_FULL_NAME_UPPER_TOKEN RADIO_41008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_radio_41008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_41008000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_41008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_41008000_FOREACH_NODELABEL(fn) fn(radio)
#define DT_N_S_soc_S_radio_41008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(radio, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_41008000_CHILD_NUM 3
#define DT_N_S_soc_S_radio_41008000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_soc_S_radio_41008000_HASH dJWLPAJB0PesvPLEFgXv_UFTloLIOSQwAf3VwdgfSHM

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_41008000_ORD 74
#define DT_N_S_soc_S_radio_41008000_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_41008000_REQUIRES_ORDS \
	5, /* /soc */ \
	6, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_41008000_SUPPORTS_ORDS \
	75, /* /soc/radio@41008000/bt_hci_controller */ \
	76, /* /soc/radio@41008000/bt_hci_sdc */ \
	77, /* /soc/radio@41008000/ieee802154 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_41008000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_radio DT_N_S_soc_S_radio_41008000
#define DT_N_NODELABEL_radio         DT_N_S_soc_S_radio_41008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_41008000_REG_NUM 1
#define DT_N_S_soc_S_radio_41008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_REG_IDX_0_VAL_ADDRESS 1090551808 /* 0x41008000 */
#define DT_N_S_soc_S_radio_41008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_radio_41008000_RANGES_NUM 0
#define DT_N_S_soc_S_radio_41008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_41008000_IRQ_NUM 1
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_radio_41008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_radio_41008000_COMPAT_MATCHES_nordic_nrf_radio 1
#define DT_N_S_soc_S_radio_41008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_41008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_COMPAT_MODEL_IDX_0 "nrf-radio"
#define DT_N_S_soc_S_radio_41008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_41008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_41008000_P_reg {1090551808 /* 0x41008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_radio_41008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_reg_IDX_0 1090551808
#define DT_N_S_soc_S_radio_41008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_radio_41008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_radio_41008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_radio_41008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_radio_41008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_dfe_supported 1
#define DT_N_S_soc_S_radio_41008000_P_dfe_supported_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_ieee802154_supported 1
#define DT_N_S_soc_S_radio_41008000_P_ieee802154_supported_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_ble_2mbps_supported 1
#define DT_N_S_soc_S_radio_41008000_P_ble_2mbps_supported_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_ble_coded_phy_supported 1
#define DT_N_S_soc_S_radio_41008000_P_ble_coded_phy_supported_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_tx_high_power_supported 0
#define DT_N_S_soc_S_radio_41008000_P_tx_high_power_supported_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_cs_supported 0
#define DT_N_S_soc_S_radio_41008000_P_cs_supported_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_status "okay"
#define DT_N_S_soc_S_radio_41008000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_41008000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_41008000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_41008000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_41008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_radio_41008000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000, status, 0)
#define DT_N_S_soc_S_radio_41008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000, status, 0)
#define DT_N_S_soc_S_radio_41008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_P_status_LEN 1
#define DT_N_S_soc_S_radio_41008000_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_compatible {"nordic,nrf-radio"}
#define DT_N_S_soc_S_radio_41008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_compatible_IDX_0 "nordic,nrf-radio"
#define DT_N_S_soc_S_radio_41008000_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-radio
#define DT_N_S_soc_S_radio_41008000_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_radio
#define DT_N_S_soc_S_radio_41008000_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_RADIO
#define DT_N_S_soc_S_radio_41008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_41008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_41008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_wakeup_source 0
#define DT_N_S_soc_S_radio_41008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_41008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@41008000/bt_hci_controller
 *
 * Node identifier: DT_N_S_soc_S_radio_41008000_S_bt_hci_controller
 *
 * Binding (compatible = zephyr,bt-hci-ll-sw-split):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/zephyr,bt-hci-ll-sw-split.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_PATH "/soc/radio@41008000/bt_hci_controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FULL_NAME "bt_hci_controller"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FULL_NAME_UNQUOTED bt_hci_controller
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FULL_NAME_TOKEN bt_hci_controller
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FULL_NAME_UPPER_TOKEN BT_HCI_CONTROLLER

/* Node parent (/soc/radio@41008000) identifier: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_PARENT DT_N_S_soc_S_radio_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_NODELABEL(fn) fn(bt_hci_controller)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(bt_hci_controller, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_CHILD_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_HASH gGqKeyc9pM8ys0DOhZTl82U8rwkDgJmj15bdnuEZqFE

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_ORD 75
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_REQUIRES_ORDS \
	74, /* /soc/radio@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_EXISTS 1
#define DT_N_INST_0_zephyr_bt_hci_ll_sw_split DT_N_S_soc_S_radio_41008000_S_bt_hci_controller
#define DT_N_NODELABEL_bt_hci_controller      DT_N_S_soc_S_radio_41008000_S_bt_hci_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_REG_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_RANGES_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_IRQ_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_IRQ_LEVEL 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_COMPAT_MATCHES_zephyr_bt_hci_ll_sw_split 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_COMPAT_VENDOR_IDX_0 "The Zephyr Project"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_COMPAT_MODEL_IDX_0 "bt-hci-ll-sw-split"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name "Controller"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_STRING_UNQUOTED Controller
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_STRING_TOKEN Controller
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_STRING_UPPER_TOKEN CONTROLLER
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_IDX_0 "Controller"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_name, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_name, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_name_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus "virtual"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_STRING_UNQUOTED virtual
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_STRING_TOKEN virtual
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_STRING_UPPER_TOKEN VIRTUAL
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_IDX_0 "virtual"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_IDX_0_ENUM_VAL_virtual_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_bus, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_bus, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_bus_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks {"no-auto-dle"}
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0_ENUM_VAL_no_auto_dle_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0 "no-auto-dle"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0_STRING_UNQUOTED no-auto-dle
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0_STRING_TOKEN no_auto_dle
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_IDX_0_STRING_UPPER_TOKEN NO_AUTO_DLE
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_quirks, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_quirks, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_quirks_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_vs_ext 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_bt_hci_vs_ext_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status "disabled"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, status, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, status, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible {"zephyr,bt-hci-ll-sw-split"}
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_IDX_0 "zephyr,bt-hci-ll-sw-split"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_IDX_0_STRING_UNQUOTED zephyr,bt-hci-ll-sw-split
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_IDX_0_STRING_TOKEN zephyr_bt_hci_ll_sw_split
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_BT_HCI_LL_SW_SPLIT
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_wakeup_source 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@41008000/bt_hci_sdc
 *
 * Node identifier: DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc
 *
 * Binding (compatible = nordic,bt-hci-sdc):
 *   /opt/nordic/ncs/v3.1.0/nrf/dts/bindings/bluetooth/nordic,bt-hci-sdc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_PATH "/soc/radio@41008000/bt_hci_sdc"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FULL_NAME "bt_hci_sdc"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FULL_NAME_UNQUOTED bt_hci_sdc
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FULL_NAME_TOKEN bt_hci_sdc
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FULL_NAME_UPPER_TOKEN BT_HCI_SDC

/* Node parent (/soc/radio@41008000) identifier: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_PARENT DT_N_S_soc_S_radio_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_NODELABEL(fn) fn(bt_hci_sdc)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_NODELABEL_VARGS(fn, ...) fn(bt_hci_sdc, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_CHILD_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_HASH xYe9_7ArlDS5Fs_fttUeANS7rjMSwuo1_JjqtNKuTAU

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_ORD 76
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_REQUIRES_ORDS \
	74, /* /soc/radio@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_EXISTS 1
#define DT_N_INST_0_nordic_bt_hci_sdc DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc
#define DT_N_NODELABEL_bt_hci_sdc     DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_REG_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_RANGES_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_IRQ_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_IRQ_LEVEL 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_COMPAT_MATCHES_nordic_bt_hci_sdc 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_COMPAT_MODEL_IDX_0 "bt-hci-sdc"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name "SDC"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_STRING_UNQUOTED SDC
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_STRING_TOKEN SDC
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_STRING_UPPER_TOKEN SDC
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_IDX_0 "SDC"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_name, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_name, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_name_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus "virtual"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_STRING_UNQUOTED virtual
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_STRING_TOKEN virtual
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_STRING_UPPER_TOKEN VIRTUAL
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_IDX_0 "virtual"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_IDX_0_ENUM_VAL_virtual_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_bus, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_bus, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_bus_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_vs_ext 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_bt_hci_vs_ext_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status "okay"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, status, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, status, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible {"nordic,bt-hci-sdc"}
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_IDX_0 "nordic,bt-hci-sdc"
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_IDX_0_STRING_UNQUOTED nordic,bt-hci-sdc
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_IDX_0_STRING_TOKEN nordic_bt_hci_sdc
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_BT_HCI_SDC
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_wakeup_source 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/radio@41008000/ieee802154
 *
 * Node identifier: DT_N_S_soc_S_radio_41008000_S_ieee802154
 *
 * Binding (compatible = nordic,nrf-ieee802154):
 *   $ZEPHYR_BASE/dts/bindings/ieee802154/nordic,nrf-ieee802154.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_PATH "/soc/radio@41008000/ieee802154"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FULL_NAME "ieee802154"
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FULL_NAME_UNQUOTED ieee802154
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FULL_NAME_TOKEN ieee802154
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FULL_NAME_UPPER_TOKEN IEEE802154

/* Node parent (/soc/radio@41008000) identifier: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_PARENT DT_N_S_soc_S_radio_41008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_NODELABEL_NUM 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_NODELABEL(fn) fn(ieee802154)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_NODELABEL_VARGS(fn, ...) fn(ieee802154, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_CHILD_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_HASH cirC8cTi32vvkao5RDFcMhDG4_d2LVXmuV1OoI3_EVY

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_ORD 77
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_REQUIRES_ORDS \
	74, /* /soc/radio@41008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ieee802154 DT_N_S_soc_S_radio_41008000_S_ieee802154
#define DT_N_NODELABEL_ieee802154         DT_N_S_soc_S_radio_41008000_S_ieee802154

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_REG_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_RANGES_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_IRQ_NUM 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_IRQ_LEVEL 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_COMPAT_MATCHES_nordic_nrf_ieee802154 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_COMPAT_VENDOR_IDX_0 "Nordic Semiconductor"
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_COMPAT_MODEL_IDX_0 "nrf-ieee802154"
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status "okay"
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, status, 0)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_status_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible {"nordic,nrf-ieee802154"}
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_IDX_0 "nordic,nrf-ieee802154"
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_IDX_0_STRING_UNQUOTED nordic,nrf-ieee802154
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_IDX_0_STRING_TOKEN nordic_nrf_ieee802154
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_IDX_0_STRING_UPPER_TOKEN NORDIC_NRF_IEEE802154
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, compatible, 0)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_LEN 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_compatible_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_wakeup_source 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_radio_41008000_S_ieee802154_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_bt_hci                   DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc
#define DT_CHOSEN_zephyr_bt_hci_EXISTS            1
#define DT_CHOSEN_zephyr_entropy                  DT_N_S_soc_S_random_41009000
#define DT_CHOSEN_zephyr_entropy_EXISTS           1
#define DT_CHOSEN_zephyr_flash_controller         DT_N_S_soc_S_flash_controller_41080000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS  1
#define DT_CHOSEN_zephyr_console                  DT_N_S_soc_S_uart_41013000
#define DT_CHOSEN_zephyr_console_EXISTS           1
#define DT_CHOSEN_zephyr_shell_uart               DT_N_S_soc_S_uart_41013000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS        1
#define DT_CHOSEN_zephyr_uart_mcumgr              DT_N_S_soc_S_uart_41013000
#define DT_CHOSEN_zephyr_uart_mcumgr_EXISTS       1
#define DT_CHOSEN_zephyr_bt_mon_uart              DT_N_S_soc_S_uart_41013000
#define DT_CHOSEN_zephyr_bt_mon_uart_EXISTS       1
#define DT_CHOSEN_zephyr_bt_c2h_uart              DT_N_S_soc_S_uart_41013000
#define DT_CHOSEN_zephyr_bt_c2h_uart_EXISTS       1
#define DT_CHOSEN_zephyr_bt_hci_ipc               DT_N_S_ipc_S_ipc0
#define DT_CHOSEN_zephyr_bt_hci_ipc_EXISTS        1
#define DT_CHOSEN_nordic_802154_spinel_ipc        DT_N_S_ipc_S_ipc0
#define DT_CHOSEN_nordic_802154_spinel_ipc_EXISTS 1
#define DT_CHOSEN_zephyr_sram                     DT_N_S_soc_S_memory_21000000
#define DT_CHOSEN_zephyr_sram_EXISTS              1
#define DT_CHOSEN_zephyr_flash                    DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000
#define DT_CHOSEN_zephyr_flash_EXISTS             1
#define DT_CHOSEN_zephyr_code_partition           DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000
#define DT_CHOSEN_zephyr_code_partition_EXISTS    1
#define DT_CHOSEN_zephyr_ieee802154               DT_N_S_soc_S_radio_41008000_S_ieee802154
#define DT_CHOSEN_zephyr_ieee802154_EXISTS        1
#define DT_CHOSEN_zephyr_ipc_shm                  DT_N_S_reserved_memory_S_memory_20070000
#define DT_CHOSEN_zephyr_ipc_shm_EXISTS           1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_ficr_1ff0000) fn(DT_N_S_soc_S_uicr_1ff8000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_21000000) fn(DT_N_S_soc_S_clock_41005000) fn(DT_N_S_soc_S_power_41005000) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller) fn(DT_N_S_soc_S_random_41009000) fn(DT_N_S_soc_S_gpiote_4100a000) fn(DT_N_S_soc_S_watchdog_4100b000) fn(DT_N_S_soc_S_timer_4100c000) fn(DT_N_S_soc_S_ecb_4100d000) fn(DT_N_S_soc_S_ccm_4100e000) fn(DT_N_S_soc_S_dppic_4100f000) fn(DT_N_S_soc_S_temp_41010000) fn(DT_N_S_soc_S_rtc_41011000) fn(DT_N_S_soc_S_mbox_41012000) fn(DT_N_S_soc_S_i2c_41013000) fn(DT_N_S_soc_S_spi_41013000) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0) fn(DT_N_S_soc_S_uart_41013000) fn(DT_N_S_soc_S_egu_41014000) fn(DT_N_S_soc_S_rtc_41016000) fn(DT_N_S_soc_S_timer_41018000) fn(DT_N_S_soc_S_timer_41019000) fn(DT_N_S_soc_S_swi_4101a000) fn(DT_N_S_soc_S_swi_4101b000) fn(DT_N_S_soc_S_swi_4101c000) fn(DT_N_S_soc_S_swi_4101d000) fn(DT_N_S_soc_S_acl_41080000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000) fn(DT_N_S_soc_S_vmc_41081000) fn(DT_N_S_soc_S_gpio_418c0500) fn(DT_N_S_soc_S_gpio_418c0800) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_sleep) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_sw_pwm) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90) fn(DT_N_S_ipc) fn(DT_N_S_ipc_S_ipc0) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_fem) fn(DT_N_S_connector) fn(DT_N_S_reserved_memory) fn(DT_N_S_reserved_memory_S_memory_20070000)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_ficr_1ff0000) fn(DT_N_S_soc_S_uicr_1ff8000) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_21000000) fn(DT_N_S_soc_S_clock_41005000) fn(DT_N_S_soc_S_power_41005000) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520) fn(DT_N_S_soc_S_radio_41008000) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc) fn(DT_N_S_soc_S_random_41009000) fn(DT_N_S_soc_S_gpiote_4100a000) fn(DT_N_S_soc_S_watchdog_4100b000) fn(DT_N_S_soc_S_ecb_4100d000) fn(DT_N_S_soc_S_ccm_4100e000) fn(DT_N_S_soc_S_dppic_4100f000) fn(DT_N_S_soc_S_temp_41010000) fn(DT_N_S_soc_S_mbox_41012000) fn(DT_N_S_soc_S_egu_41014000) fn(DT_N_S_soc_S_swi_4101a000) fn(DT_N_S_soc_S_swi_4101b000) fn(DT_N_S_soc_S_swi_4101c000) fn(DT_N_S_soc_S_swi_4101d000) fn(DT_N_S_soc_S_acl_41080000) fn(DT_N_S_soc_S_flash_controller_41080000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000) fn(DT_N_S_soc_S_vmc_41081000) fn(DT_N_S_soc_S_gpio_418c0500) fn(DT_N_S_soc_S_gpio_418c0800) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_sleep) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_sleep) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1) fn(DT_N_S_entropy_bt_hci) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90) fn(DT_N_S_ipc) fn(DT_N_S_ipc_S_ipc0) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_fem) fn(DT_N_S_connector) fn(DT_N_S_reserved_memory) fn(DT_N_S_reserved_memory_S_memory_20070000)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_controller, __VA_ARGS__) fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_4100c000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__) fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_41011000, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_41013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_41013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_41013000_S_nrf21540_fem_spi_0, __VA_ARGS__) fn(DT_N_S_soc_S_uart_41013000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_41016000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_41018000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_41019000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, __VA_ARGS__) fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_sw_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_ipc, __VA_ARGS__) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_fem, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_memory_20070000, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__) fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__) fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__) fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__) fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__) fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__) fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__) fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000, __VA_ARGS__) fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_sleep, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_sleep_S_group1, __VA_ARGS__) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_ipc, __VA_ARGS__) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_fem, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_memory_20070000, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_c000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_23000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions_S_partition_3a000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nordic_thingy53_nrf5340_cpunet 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf5340_cpunet_qkaa 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf5340_cpunet 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf53 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_power 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpregret 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_radio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ieee802154 1
#define DT_COMPAT_HAS_OKAY_nordic_bt_hci_sdc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rng 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_wdt 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ecb 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ccm 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_dppic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_temp 1
#define DT_COMPAT_HAS_OKAY_nordic_mbox_nrf_ipc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ipc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_egu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_swi 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_acl 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf53_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_vmc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pinctrl 1
#define DT_COMPAT_HAS_OKAY_zephyr_bt_hci_entropy 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_mpu 1
#define DT_COMPAT_HAS_OKAY_zephyr_ipc_openamp_static_vrings 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf21540_fem 1
#define DT_COMPAT_HAS_OKAY_nordic_thingy53_edge_connector 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nordic_thingy53_nrf5340_cpunet_NUM_OKAY 1
#define DT_N_INST_nordic_nrf5340_cpunet_qkaa_NUM_OKAY 1
#define DT_N_INST_nordic_nrf5340_cpunet_NUM_OKAY 1
#define DT_N_INST_nordic_nrf53_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 2
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_power_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpregret_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_radio_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ieee802154_NUM_OKAY 1
#define DT_N_INST_nordic_bt_hci_sdc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rng_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_wdt_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ecb_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ccm_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_dppic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_temp_NUM_OKAY 1
#define DT_N_INST_nordic_mbox_nrf_ipc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ipc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_egu_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_swi_NUM_OKAY 4
#define DT_N_INST_nordic_nrf_acl_NUM_OKAY 1
#define DT_N_INST_nordic_nrf53_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_vmc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_pinctrl_NUM_OKAY 1
#define DT_N_INST_zephyr_bt_hci_entropy_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m33_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_mpu_NUM_OKAY 1
#define DT_N_INST_zephyr_ipc_openamp_static_vrings_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_nordic_nrf21540_fem_NUM_OKAY 1
#define DT_N_INST_nordic_thingy53_edge_connector_NUM_OKAY 1
#define DT_FOREACH_OKAY_nordic_thingy53_nrf5340_cpunet(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nordic_thingy53_nrf5340_cpunet(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_thingy53_nrf5340_cpunet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_thingy53_nrf5340_cpunet(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf5340_cpunet_qkaa(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf5340_cpunet_qkaa(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf5340_cpunet_qkaa(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf5340_cpunet_qkaa(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf5340_cpunet(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf5340_cpunet(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf5340_cpunet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf5340_cpunet(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf53(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf53(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf53(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf53(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ficr(fn) fn(DT_N_S_soc_S_ficr_1ff0000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ficr(fn, ...) fn(DT_N_S_soc_S_ficr_1ff0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ficr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uicr(fn) fn(DT_N_S_soc_S_uicr_1ff8000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uicr(fn, ...) fn(DT_N_S_soc_S_uicr_1ff8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uicr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_21000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_soc_S_memory_21000000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_soc_S_memory_21000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_clock(fn) fn(DT_N_S_soc_S_clock_41005000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_clock(fn, ...) fn(DT_N_S_soc_S_clock_41005000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_power(fn) fn(DT_N_S_soc_S_power_41005000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_power(fn, ...) fn(DT_N_S_soc_S_power_41005000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpregret(fn) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpregret(fn, ...) fn(DT_N_S_soc_S_power_41005000_S_gpregret1_4100551c, __VA_ARGS__) fn(DT_N_S_soc_S_power_41005000_S_gpregret2_41005520, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpregret(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpregret(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_radio(fn) fn(DT_N_S_soc_S_radio_41008000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_radio(fn, ...) fn(DT_N_S_soc_S_radio_41008000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_radio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_radio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ieee802154(fn) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ieee802154(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_ieee802154, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ieee802154(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ieee802154(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_bt_hci_sdc(fn) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc)
#define DT_FOREACH_OKAY_VARGS_nordic_bt_hci_sdc(fn, ...) fn(DT_N_S_soc_S_radio_41008000_S_bt_hci_sdc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_bt_hci_sdc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_bt_hci_sdc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rng(fn) fn(DT_N_S_soc_S_random_41009000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rng(fn, ...) fn(DT_N_S_soc_S_random_41009000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpiote(fn) fn(DT_N_S_soc_S_gpiote_4100a000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpiote(fn, ...) fn(DT_N_S_soc_S_gpiote_4100a000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpiote(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_wdt(fn) fn(DT_N_S_soc_S_watchdog_4100b000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_wdt(fn, ...) fn(DT_N_S_soc_S_watchdog_4100b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_wdt(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_wdt(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ecb(fn) fn(DT_N_S_soc_S_ecb_4100d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ecb(fn, ...) fn(DT_N_S_soc_S_ecb_4100d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ecb(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ecb(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ccm(fn) fn(DT_N_S_soc_S_ccm_4100e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ccm(fn, ...) fn(DT_N_S_soc_S_ccm_4100e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_dppic(fn) fn(DT_N_S_soc_S_dppic_4100f000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_dppic(fn, ...) fn(DT_N_S_soc_S_dppic_4100f000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_dppic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_dppic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_temp(fn) fn(DT_N_S_soc_S_temp_41010000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_temp(fn, ...) fn(DT_N_S_soc_S_temp_41010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_temp(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_temp(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_mbox_nrf_ipc(fn) fn(DT_N_S_soc_S_mbox_41012000)
#define DT_FOREACH_OKAY_VARGS_nordic_mbox_nrf_ipc(fn, ...) fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_mbox_nrf_ipc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_mbox_nrf_ipc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ipc(fn) fn(DT_N_S_soc_S_mbox_41012000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ipc(fn, ...) fn(DT_N_S_soc_S_mbox_41012000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ipc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ipc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_egu(fn) fn(DT_N_S_soc_S_egu_41014000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_egu(fn, ...) fn(DT_N_S_soc_S_egu_41014000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_egu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_egu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_swi(fn) fn(DT_N_S_soc_S_swi_4101a000) fn(DT_N_S_soc_S_swi_4101b000) fn(DT_N_S_soc_S_swi_4101c000) fn(DT_N_S_soc_S_swi_4101d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_swi(fn, ...) fn(DT_N_S_soc_S_swi_4101a000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101b000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101c000, __VA_ARGS__) fn(DT_N_S_soc_S_swi_4101d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_swi(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_swi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_acl(fn) fn(DT_N_S_soc_S_acl_41080000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_acl(fn, ...) fn(DT_N_S_soc_S_acl_41080000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_acl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_acl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf53_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_41080000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf53_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf53_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf53_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_41080000_S_flash_1000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_vmc(fn) fn(DT_N_S_soc_S_vmc_41081000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_vmc(fn, ...) fn(DT_N_S_soc_S_vmc_41081000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_vmc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_vmc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpio(fn) fn(DT_N_S_soc_S_gpio_418c0500) fn(DT_N_S_soc_S_gpio_418c0800)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_418c0500, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_418c0800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_bt_hci_entropy(fn) fn(DT_N_S_entropy_bt_hci)
#define DT_FOREACH_OKAY_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(DT_N_S_entropy_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_bt_hci_entropy(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_bt_hci_entropy(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m33(fn) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33(fn, ...) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_mpu(fn) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_1_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_ipc_openamp_static_vrings(fn) fn(DT_N_S_ipc_S_ipc0)
#define DT_FOREACH_OKAY_VARGS_zephyr_ipc_openamp_static_vrings(fn, ...) fn(DT_N_S_ipc_S_ipc0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_ipc_openamp_static_vrings(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_ipc_openamp_static_vrings(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf21540_fem(fn) fn(DT_N_S_fem)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf21540_fem(fn, ...) fn(DT_N_S_fem, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf21540_fem(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf21540_fem(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_thingy53_edge_connector(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_nordic_thingy53_edge_connector(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_thingy53_edge_connector(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_thingy53_edge_connector(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
